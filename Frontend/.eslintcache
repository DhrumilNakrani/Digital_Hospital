[{"D:\\Project Work\\Frontend\\src\\index.js":"1","D:\\Project Work\\Frontend\\src\\App.js":"2","D:\\Project Work\\Frontend\\src\\pages\\HomePage.js":"3","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StartingPageContent.js":"4","D:\\Project Work\\Frontend\\src\\store\\auth-context.js":"5","D:\\Project Work\\Frontend\\src\\pages\\AdminPage.js":"6","D:\\Project Work\\Frontend\\src\\components\\Auth\\AdminForm.js":"7","D:\\Project Work\\Frontend\\src\\pages\\DoctorPage.js":"8","D:\\Project Work\\Frontend\\src\\pages\\PatientPage.js":"9","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js":"10","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js":"11","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminHomePage.js":"12","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js":"13","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageStaffPage.js":"14","D:\\Project Work\\Frontend\\src\\components\\Auth\\DoctorForm.js":"15","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageDoctorForm.js":"16","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js":"17","D:\\Project Work\\Frontend\\src\\components\\Auth\\PatientForm.js":"18","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageStaffForm.js":"19","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js":"20","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\AdminStarting.js":"21","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminMainNavigation.js":"22","D:\\Project Work\\Frontend\\src\\pages\\MainNavigation.js":"23","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorAboutUs.js":"24","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorContactUs.js":"25","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientHomePage.js":"26","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorDetails.js":"27","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorHomePage.js":"28","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientContactUs.js":"29","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDetails.js":"30","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientAboutUs.js":"31","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\PatientStarting.js":"32","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\DoctorStarting.js":"33","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js":"34","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientMainNavigation.js":"35","D:\\Project Work\\Frontend\\src\\pages\\HomeAboutUs.js":"36","D:\\Project Work\\Frontend\\src\\pages\\Footer.js":"37","D:\\Project Work\\Frontend\\src\\pages\\HomeContactUs.js":"38","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDocuments.js":"39","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffHomePage.js":"40","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadPDFDocument.js":"41","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadDocument.js":"42","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffManagePatientId.js":"43","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffMainNavigation.js":"44","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StaffStarting.js":"45","D:\\Project Work\\Frontend\\src\\pages\\StaffPage.js":"46","D:\\Project Work\\Frontend\\src\\components\\Auth\\StaffForm.js":"47","D:\\Project Work\\Frontend\\src\\pages\\Patient\\SearchDoctor.js":"48","D:\\Project Work\\Frontend\\src\\pages\\Patient\\Map.js":"49","D:\\Project Work\\Frontend\\src\\pages\\Patient\\UpdateProfile.js":"50","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\UpdateDoctorProfile.js":"51","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UpdateStaffProfile.js":"52","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffDetail.js":"53","D:\\Project Work\\Frontend\\src\\pages\\PaymentPage.js":"54"},{"size":427,"mtime":1645887432467,"results":"55","hashOfConfig":"56"},{"size":4805,"mtime":1646762601494,"results":"57","hashOfConfig":"56"},{"size":338,"mtime":1643910651488,"results":"58","hashOfConfig":"56"},{"size":1840,"mtime":1646762665597,"results":"59","hashOfConfig":"56"},{"size":719,"mtime":1643392031470,"results":"60","hashOfConfig":"56"},{"size":302,"mtime":1643910629629,"results":"61","hashOfConfig":"56"},{"size":5763,"mtime":1646762421706,"results":"62","hashOfConfig":"56"},{"size":321,"mtime":1643910640453,"results":"63","hashOfConfig":"56"},{"size":326,"mtime":1643910731911,"results":"64","hashOfConfig":"56"},{"size":422,"mtime":1643910490047,"results":"65","hashOfConfig":"56"},{"size":423,"mtime":1643910606617,"results":"66","hashOfConfig":"56"},{"size":381,"mtime":1645898148784,"results":"67","hashOfConfig":"56"},{"size":418,"mtime":1643910511826,"results":"68","hashOfConfig":"56"},{"size":416,"mtime":1643910616792,"results":"69","hashOfConfig":"56"},{"size":5886,"mtime":1646763936288,"results":"70","hashOfConfig":"56"},{"size":13586,"mtime":1645804328277,"results":"71","hashOfConfig":"56"},{"size":3034,"mtime":1646762136170,"results":"72","hashOfConfig":"56"},{"size":16553,"mtime":1646762395610,"results":"73","hashOfConfig":"56"},{"size":12067,"mtime":1644821429292,"results":"74","hashOfConfig":"56"},{"size":3014,"mtime":1646762166559,"results":"75","hashOfConfig":"56"},{"size":2164,"mtime":1646477675229,"results":"76","hashOfConfig":"56"},{"size":2249,"mtime":1646763985713,"results":"77","hashOfConfig":"56"},{"size":2144,"mtime":1646763782558,"results":"78","hashOfConfig":"56"},{"size":5470,"mtime":1646762736789,"results":"79","hashOfConfig":"56"},{"size":3980,"mtime":1646762760895,"results":"80","hashOfConfig":"56"},{"size":401,"mtime":1644822625335,"results":"81","hashOfConfig":"56"},{"size":10277,"mtime":1646762783692,"results":"82","hashOfConfig":"56"},{"size":391,"mtime":1644822286238,"results":"83","hashOfConfig":"56"},{"size":4004,"mtime":1646762934895,"results":"84","hashOfConfig":"56"},{"size":9337,"mtime":1646763006033,"results":"85","hashOfConfig":"56"},{"size":5305,"mtime":1646651806243,"results":"86","hashOfConfig":"56"},{"size":1492,"mtime":1646762647746,"results":"87","hashOfConfig":"56"},{"size":1490,"mtime":1646762635850,"results":"88","hashOfConfig":"56"},{"size":2382,"mtime":1646762837422,"results":"89","hashOfConfig":"56"},{"size":2843,"mtime":1646763121118,"results":"90","hashOfConfig":"56"},{"size":4435,"mtime":1647024599377,"results":"91","hashOfConfig":"56"},{"size":3472,"mtime":1647023982293,"results":"92","hashOfConfig":"56"},{"size":3983,"mtime":1645423107684,"results":"93","hashOfConfig":"56"},{"size":2918,"mtime":1646763065302,"results":"94","hashOfConfig":"56"},{"size":381,"mtime":1645375700214,"results":"95","hashOfConfig":"56"},{"size":4196,"mtime":1646763604264,"results":"96","hashOfConfig":"56"},{"size":482,"mtime":1646474166227,"results":"97","hashOfConfig":"56"},{"size":3223,"mtime":1646764169369,"results":"98","hashOfConfig":"56"},{"size":2097,"mtime":1646763438141,"results":"99","hashOfConfig":"56"},{"size":359,"mtime":1646762656614,"results":"100","hashOfConfig":"56"},{"size":316,"mtime":1645376626959,"results":"101","hashOfConfig":"56"},{"size":5886,"mtime":1646762499036,"results":"102","hashOfConfig":"56"},{"size":5858,"mtime":1647016718528,"results":"103","hashOfConfig":"56"},{"size":2054,"mtime":1646762901092,"results":"104","hashOfConfig":"56"},{"size":6475,"mtime":1646764184204,"results":"105","hashOfConfig":"56"},{"size":6470,"mtime":1646762887541,"results":"106","hashOfConfig":"56"},{"size":6434,"mtime":1646764156564,"results":"107","hashOfConfig":"56"},{"size":9380,"mtime":1646763280826,"results":"108","hashOfConfig":"56"},{"size":3464,"mtime":1647017072727,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"cnbsz4",{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project Work\\Frontend\\src\\index.js",[],["228","229"],"D:\\Project Work\\Frontend\\src\\App.js",[],"D:\\Project Work\\Frontend\\src\\pages\\HomePage.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\Project Work\\Frontend\\src\\store\\auth-context.js",[],"D:\\Project Work\\Frontend\\src\\pages\\AdminPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\AdminForm.js",["230","231"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AdminForm.module.css\";\nimport { Card } from \"react-bootstrap\";\nimport AdminImage from \"../images/AdminVector.jpg\";\nconst AdminForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\n\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\n    useState(false);\n\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\n    useState(false);\n\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\n  const emailInputIsInvalidLogin =\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\n\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\n  const passwordInputIsInvalidLogin =\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\n\n  const emailInputChangeHandlerLogin = (event) => {\n    setEnteredEmailLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const emailInputBlurHandlerLogin = () => {\n    setEnteredEmailLoginTouched(true);\n  };\n\n  const passwordInputChangeHandlerLogin = (event) => {\n    setEnteredPasswordLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const passwordInputBlurHandlerLogin = () => {\n    setEnteredPasswordLoginTouched(true);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLogin) {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(\"http://localhost:5000/admin/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: enteredEmailLogin,\n            password: enteredPasswordLogin,\n          }),\n        });\n\n        const responseData = await response.json();\n        setIsLoading(false);\n\n        if (responseData.status === \"201\") {\n          authCtx.login(responseData.token);\n          window.sessionStorage.setItem(\"adminId\", responseData.adminId);\n          history.replace(\"/admin/home\");\n          console.log(responseData.message);\n        } else {\n          setIsInValidCredentials(true);\n          setEnteredEmailLogin(\"\");\n          setEnteredPasswordLogin(\"\");\n\n          setEnteredEmailLoginTouched(false);\n          setEnteredPasswordLoginTouched(false);\n          console.log(responseData.message);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.container}>\n        <div className={classes.imagebox}>\n          <img src={AdminImage} className=\"img-fluid\" alt=\"Admin image\" style={{ width: \"600px\" }} />\n        </div>\n        <div className={classes.loginbox}>\n          <Card.ImgOverlay>\n            <section className={classes.auth}>\n              <h3>ADMIN LOGIN</h3>\n\n              <form onSubmit={formSubmitHandler}>\n                {isLogin && (\n                  <div>\n                    <div className={classes.control}>\n                      <label htmlFor=\"email\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"abc@gmail.com\"\n                        required\n                        onChange={emailInputChangeHandlerLogin}\n                        onBlur={emailInputBlurHandlerLogin}\n                        value={enteredEmailLogin}\n                      />\n                      {emailInputIsInvalidLogin && (\n                        <div className=\"p-3\">\n                          <h6>Email must not be empty</h6>\n                        </div>\n                      )}\n                    </div>\n                    <div className={classes.control}>\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={passwordInputChangeHandlerLogin}\n                        onBlur={passwordInputBlurHandlerLogin}\n                        value={enteredPasswordLogin}\n                      />\n                      {passwordInputIsInvalidLogin && (\n                        <div className=\"p-3\">\n                          <h6 className=\"error\">Password must not be empty</h6>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                <div className={classes.actions}>\n                  {!isLoading && <button disabled={!formIsValid}>Login</button>}\n                  {isLoading && (\n                    <RingLoader color=\"white\" height={80} width={80}></RingLoader>\n                  )}\n                  {isLogin && isInValidCredentials && (\n                    <div className=\"p-3\">\n                      <h6 className=\"error\">Invalid credentials, could not log you in.</h6>\n                    </div>\n                  )}\n                </div>\n              </form>\n            </section>\n          </Card.ImgOverlay>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AdminForm;","D:\\Project Work\\Frontend\\src\\pages\\DoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\PatientPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageStaffPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\DoctorForm.js",["232","233"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./DoctorForm.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport DoctorImage from \"../images/DoctorVector.jpg\";\r\nconst DoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/doctor/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"doctorId\", responseData.doctorId);\r\n          history.replace({\r\n            pathname: \"/doctor/detail\",\r\n          });\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n          <img src={DoctorImage}\r\n            className=\"img-fluid\" alt=\"Doctor image\" style={{ width: \"600px\" }} />\r\n        </div>\r\n        <div className={classes.loginbox}>\r\n          <Card.ImgOverlay>\r\n            <section className={classes.auth}>\r\n              <h3>DOCTOR LOGIN</h3>\r\n\r\n              <form onSubmit={formSubmitHandler}>\r\n                {isLogin && (\r\n                  <div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"abc@gmail.com\"\r\n                        required\r\n                        onChange={emailInputChangeHandlerLogin}\r\n                        onBlur={emailInputBlurHandlerLogin}\r\n                        value={enteredEmailLogin}\r\n                      />\r\n                      {emailInputIsInvalidLogin && (\r\n                        <div className=\"p-3\">\r\n                          <h6>Email must not be empty</h6>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        onChange={passwordInputChangeHandlerLogin}\r\n                        onBlur={passwordInputBlurHandlerLogin}\r\n                        value={enteredPasswordLogin}\r\n                      />\r\n                      {passwordInputIsInvalidLogin &&\r\n                        <div className=\"p-3\">\r\n                          <h6>Password must not be empty</h6>\r\n                        </div>}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className={classes.actions}>\r\n                  {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n                  {isLoading && (\r\n                    <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n                  )}\r\n                  {isLogin && isInValidCredentials && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Invalid credentials, could not log you in.</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </section>\r\n          </Card.ImgOverlay>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorForm;","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageDoctorForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\PatientForm.js",["234"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport PatientImage from \"../images/PatientVector.jpg\"; \r\nimport classes from \"./PatientForm.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nconst PatientForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n  const [isExsistingUser, setIsExsistingUser] = useState(false);\r\n  const [isPasswordInValid, setIsPasswordInValid] = useState(false);\r\n\r\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\r\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\r\n\r\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\r\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\r\n\r\n  const [enteredConfirmPassword, setEnteredConfirmPassword] = useState(\"\");\r\n  const [enteredConfirmPasswordTouched, setEnteredConfirmPasswordTouched] =\r\n    useState(false);\r\n\r\n  const [enteredMobileNumber, setEnteredMobileNumber] = useState(\"\");\r\n  const [enteredMobileNumberTouched, setEnteredMobileNumberTouched] =\r\n    useState(false);\r\n\r\n  const enteredFirstNameIsValid = enteredFirstName.trim() !== \"\";\r\n  const firstNameInputIsInValid =\r\n    !enteredFirstNameIsValid && enteredFirstNameTouched;\r\n\r\n  const enteredLastNameIsValid = enteredLastName.trim() !== \"\";\r\n  const lastNameInputIsInValid =\r\n    !enteredLastNameIsValid && enteredLastNameTouched;\r\n\r\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\r\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const enteredPasswordIsValid = enteredPassword.trim() !== \"\";\r\n  const passwordInputIsInValid =\r\n    !enteredPasswordIsValid && enteredPasswordTouched;\r\n\r\n  const enteredConfirmPasswordIsValid = enteredConfirmPassword.trim() !== \"\";\r\n  const ConfirmPasswordInputIsInValid =\r\n    !enteredConfirmPasswordIsValid && enteredConfirmPasswordTouched;\r\n\r\n  const enteredMobileNumberIsValid = enteredMobileNumber.trim() !== \"\";\r\n  const mobileNumberInputIsInValid =\r\n    !enteredMobileNumberIsValid && enteredMobileNumberTouched;\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const firstNameInputChangeHandler = (event) => {\r\n    setEnteredFirstName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const firstNameInputBlurHandler = (event) => {\r\n    setEnteredFirstNameTouched(true);\r\n  };\r\n\r\n  const lastNameInputChangeHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const lastNameInputBlurHandler = (event) => {\r\n    setEnteredLastNameTouched(true);\r\n  };\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const emailInputBlurHandler = (event) => {\r\n    setEnteredEmailTouched(true);\r\n  };\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const passwordInputBlurHandler = (event) => {\r\n    setEnteredPasswordTouched(true);\r\n  };\r\n\r\n  const confirmPasswordInputChangeHandler = (event) => {\r\n    setEnteredConfirmPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const confirmPasswordInputBlurHandler = (event) => {\r\n    setEnteredConfirmPasswordTouched(true);\r\n  };\r\n\r\n  const mobileNumberInputChangeHandler = (event) => {\r\n    setEnteredMobileNumber(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const mobileNumberInputBlurHandler = (event) => {\r\n    setEnteredMobileNumberTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n  if (\r\n    enteredEmailIsValid &&\r\n    enteredFirstNameIsValid &&\r\n    enteredLastNameIsValid &&\r\n    enteredPasswordIsValid &&\r\n    enteredConfirmPasswordIsValid &&\r\n    enteredMobileNumberIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n          history.replace(\"/patient/detail\");\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"http://localhost:5000/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: enteredFirstName,\r\n            lastName: enteredLastName,\r\n            email: enteredEmail,\r\n            mobileNumber: enteredMobileNumber,\r\n            password: enteredPassword,\r\n            confirmPassword: enteredConfirmPassword,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (\r\n          responseData.status !== \"422\" &&\r\n          enteredPassword === enteredConfirmPassword\r\n        ) {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n          history.replace(\"/patient/detail\");\r\n          console.log(responseData.message);\r\n        } else if (enteredPassword !== enteredConfirmPassword) {\r\n          setIsPasswordInValid(true);\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsExsistingUser(true);\r\n          setEnteredEmail(\"\");\r\n          setEnteredFirstName(\"\");\r\n          setEnteredLastName(\"\");\r\n          setEnteredMobileNumber(\"\");\r\n          setEnteredPassword(\"\");\r\n          setEnteredConfirmPassword(\"\");\r\n\r\n          setEnteredConfirmPasswordTouched(false);\r\n          setEnteredPasswordTouched(false);\r\n          setEnteredEmailTouched(false);\r\n          setEnteredFirstNameTouched(false);\r\n          setEnteredLastNameTouched(false);\r\n          setEnteredMobileNumberTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n        <img src={PatientImage} className=\"img-fluid\" alt=\"Patient image\" style={{width:\"600px\"}}/>\r\n      </div>\r\n      <div className={classes.loginbox}>\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>{isLogin ? \"PATIENT LOGIN\" : \"SIGN UP\"}</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {!isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    placeholder=\"First Name\"\r\n                    required\r\n                    onChange={firstNameInputChangeHandler}\r\n                    onBlur={firstNameInputBlurHandler}\r\n                    value={enteredFirstName}\r\n                  />\r\n                  {firstNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>First Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"lname\"\r\n                    placeholder=\"Last Name\"\r\n                    required\r\n                    onChange={lastNameInputChangeHandler}\r\n                    onBlur={lastNameInputBlurHandler}\r\n                    value={enteredLastName}\r\n                  />\r\n                  {lastNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Last Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    id=\"email\"\r\n                    required\r\n                    onChange={emailInputChangeHandler}\r\n                    onBlur={emailInputBlurHandler}\r\n                    value={enteredEmail}\r\n                  />\r\n                  {emailInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Mobile Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"number\"\r\n                    placeholder=\"10 digit mobile number\"\r\n                    pattern=\"[0-9]{10}\"\r\n                    required\r\n                    onChange={mobileNumberInputChangeHandler}\r\n                    onBlur={mobileNumberInputBlurHandler}\r\n                    value={enteredMobileNumber}\r\n                  />\r\n                  {mobileNumberInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Mobile Number must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={passwordInputChangeHandler}\r\n                    onBlur={passwordInputBlurHandler}\r\n                    value={enteredPassword}\r\n                  />\r\n                  {passwordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"cpassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={confirmPasswordInputChangeHandler}\r\n                    onBlur={confirmPasswordInputBlurHandler}\r\n                    value={enteredConfirmPassword}\r\n                  />\r\n                  {ConfirmPasswordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Confirm Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && (\r\n                <button disabled={!formIsValid}>\r\n                  {isLogin ? \"Login\" : \"Create Account\"}\r\n                </button>\r\n              )}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isExsistingUser && (\r\n                <div className=\"p-3\">\r\n                  <h6>User exists already, please login instead.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isPasswordInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Password and Confirm Password must be same.</h6>\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                className={classes.toggle}\r\n                onClick={switchAuthModeHandler}\r\n              >\r\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n      </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientForm;","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageStaffForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\AdminStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminMainNavigation.js",[],"D:\\Project Work\\Frontend\\src\\pages\\MainNavigation.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorAboutUs.js",["235","236","237","238","239","240","241","242","243","244","245","246","247"],"import React from \"react\";\r\nimport DoctorMainNavigation from \"./DoctorMainNavigation\";\r\nimport Footer from \"../Footer\";\r\nimport './DoctorAboutUs.css';\r\n\r\nconst DoctorAboutUs = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <DoctorMainNavigation></DoctorMainNavigation>\r\n      <div className=\"background2\">\r\n        <div className=\"section\">\r\n          <div className=\"container\">\r\n            <div className=\"title\">\r\n              <h1>About Us</h1>\r\n            </div>\r\n            <div className=\"content\">\r\n              <div className=\"article\">\r\n                <h4 style={{ color: \"white\", fontFamily: \"times-new-roman\" }}>\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam lacinia luctus ullamcorper. Mauris tincidunt ex sit amet leo eleifend, in venenatis elit efficitur. Ut at mi sit amet nunc ultrices mattis vel sed mi. Donec fermentum vulputate tellus imperdiet fringilla. Nam ac ligula tincidunt, egestas odio vel, vulputate dolor. Donec non nibh mollis, tincidunt ligula non, pulvinar ipsum. Nullam tempus dolor tellus, id consectetur nunc vulputate in. Donec venenatis, magna at eleifend eleifend, turpis libero malesuada dui, sed semper diam justo vitae ante. Phasellus euismod justo tortor, a tempus nunc faucibus imperdiet.\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"image-section\">\r\n              <img src=\"https://st2.depositphotos.com/3591429/5997/i/600/depositphotos_59977559-stock-photo-hands-holding-word-about-us.jpg\"></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-12 col-sm-8 col-lg-6\">\r\n              <div className=\"section_heading text-center wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                <h3 style={{ color: \"white\", fontFamily: \"times-new-roman\", borderBottom: \"5px solid #c4d156\", display: \"inline-block\" }}>Our Creative <span> Team</span></h3>\r\n                <p style={{ color: \"white\" }}>Appland is completely creative, lightweight, clean &amp; super responsive app landing page.</p>\r\n                <div className=\"line\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-sm-2 col-lg-3\">\r\n              <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n                <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\" />\r\n                  <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n                </div>\r\n                <div className=\"single_advisor_details_info\">\r\n                  <h6>Samantha Sarah</h6>\r\n                  <p className=\"designation\">Founder &amp; CEO</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-sm-2 col-lg-3\">\r\n              <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n                <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"\" />\r\n                  <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n                </div>\r\n                <div className=\"single_advisor_details_info\">\r\n                  <h6>Nazrul Islam</h6>\r\n                  <p className=\"designation\">UI Designer</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-sm-2 col-lg-3\">\r\n              <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" alt=\"\" />\r\n                  <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n                </div>\r\n                <div className=\"single_advisor_details_info\">\r\n                  <h6>Riyadh Khan</h6>\r\n                  <p className=\"designation\">Developer</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-sm-2 col-lg-3\">\r\n              <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.5s\">\r\n                <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar2.png\" alt=\"\" />\r\n                  <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n                </div>\r\n                <div className=\"single_advisor_details_info\">\r\n                  <h6>Niloy Islam</h6>\r\n                  <p className=\"designation\">Marketing Manager</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorAboutUs;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorDetails.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDetails.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientAboutUs.js",["248","249","250","251","252","253","254","255","256","257","258","259","260"],"import React from \"react\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport './PatientAboutUs.css';\r\nimport Footer from \"../Footer\";\r\n\r\nconst PatientAboutUs = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n      <div className=\"background2\">\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"title\">\r\n            <h1>About Us</h1>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"article\">\r\n              <h4 style={{color:\"white\" , fontFamily:\"times-new-roman\"}}>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam lacinia luctus ullamcorper. Mauris tincidunt ex sit amet leo eleifend, in venenatis elit efficitur. Ut at mi sit amet nunc ultrices mattis vel sed mi. Donec fermentum vulputate tellus imperdiet fringilla. Nam ac ligula tincidunt, egestas odio vel, vulputate dolor. Donec non nibh mollis, tincidunt ligula non, pulvinar ipsum. Nullam tempus dolor tellus, id consectetur nunc vulputate in. Donec venenatis, magna at eleifend eleifend, turpis libero malesuada dui, sed semper diam justo vitae ante. Phasellus euismod justo tortor, a tempus nunc faucibus imperdiet.\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-section\">\r\n            <img src=\"https://st2.depositphotos.com/3591429/5997/i/600/depositphotos_59977559-stock-photo-hands-holding-word-about-us.jpg\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n\r\n<div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-sm-8 col-lg-6\">\r\n            <div className=\"section_heading text-center wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <h3 style={{color:\"white\" , fontFamily:\"times-new-roman\",borderBottom:\"5px solid #c4d156\", display:\"inline-block\"}}>Our Creative <span> Team</span></h3>\r\n              <p style={{color:\"white\"}}>Appland is completely creative, lightweight, clean &amp; super responsive app landing page.</p>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Samantha Sarah</h6>\r\n                <p className=\"designation\">Founder &amp; CEO</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Nazrul Islam</h6>\r\n                <p className=\"designation\">UI Designer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Riyadh Khan</h6>\r\n                <p className=\"designation\">Developer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.5s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar2.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Niloy Islam</h6>\r\n                <p className=\"designation\">Marketing Manager</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientAboutUs;","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\PatientStarting.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\DoctorStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientMainNavigation.js",[],"D:\\Project Work\\Frontend\\src\\pages\\HomeAboutUs.js",["261","262","263","264","265","266","267","268","269","270"],"D:\\Project Work\\Frontend\\src\\pages\\Footer.js",["271","272","273","274","275","276","277","278"],"D:\\Project Work\\Frontend\\src\\pages\\HomeContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDocuments.js",["279"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { GrDocumentPdf } from 'react-icons/gr';\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nconst PatientDocuments = (props) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  const patientId = window.sessionStorage.getItem(\"patientId\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/detail/${patientId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const patientDoc = {\r\n          doc: responseData.patient.documents,\r\n        };\r\n        setDocuments(patientDoc.doc);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const displayPatientDoc = (e, index) => {\r\n    console.log(index);\r\n    fetch(`http://localhost:5000/documents/${patientId}/${index}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/pdf\",\r\n      },\r\n    })\r\n      .then((res) => res.blob())\r\n      .then((response) => {\r\n        console.log(\"Helloo\");\r\n        console.log(response);\r\n        const file = new Blob([response], {\r\n          type: \"application/pdf\",\r\n        });\r\n        const fileURL = URL.createObjectURL(file);\r\n        window.open(fileURL);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row text-center\">\r\n          {\r\n            documents.map((doc, index) => {\r\n              return (\r\n\r\n                <div className=\"col-10 col-md-3 mt-5\">\r\n                  <div className=\"card p-2\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"ml-3 w-100\">\r\n                        <h4 className=\"mb-0 mt-0 textLeft\">{doc.patientDoc.split(\"-\")[1]}\r\n                        </h4> <br></br><span className=\"textLeft\"><GrDocumentPdf size={40}></GrDocumentPdf></span>\r\n                        <div className=\"p-2 mt-2 d-flex justify-content-between rounded text-white stats\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <NavLink\r\n                    to=\"/patient/document\"\r\n                    onClick={(e) => displayPatientDoc(e, index)}\r\n                    key={doc.patientDoc}\r\n                  >\r\n                    <button type=\"button\" href={doc.patientDoc} className=\"btn btn-info btn-lg mx-2\">Open Document</button>\r\n                  </NavLink>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PatientDocuments;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadPDFDocument.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadDocument.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffManagePatientId.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffMainNavigation.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StaffStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\StaffPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\StaffForm.js",["280","281"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./StaffForm.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport StaffImage from \"../images/StaffVector.jpg\";\r\n\r\nconst StaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/staff/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"staffId\", responseData.staffId);\r\n          history.replace({\r\n            pathname: \"/staff/home\",\r\n          });\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n          <img src={StaffImage} className=\"img-fluid\" alt=\"Staff image\" style={{ width: \"600px\" }} />\r\n        </div>\r\n        <div className={classes.loginbox}>\r\n          <Card.ImgOverlay>\r\n            <section className={classes.auth}>\r\n              <h3>STAFF LOGIN</h3>\r\n\r\n              <form onSubmit={formSubmitHandler}>\r\n                {isLogin && (\r\n                  <div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"abc@gmail.com\"\r\n                        required\r\n                        onChange={emailInputChangeHandlerLogin}\r\n                        onBlur={emailInputBlurHandlerLogin}\r\n                        value={enteredEmailLogin}\r\n                      />\r\n                      {emailInputIsInvalidLogin && (\r\n                        <div className=\"p-3\">\r\n                          <h6>Email must not be empty</h6>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        onChange={passwordInputChangeHandlerLogin}\r\n                        onBlur={passwordInputBlurHandlerLogin}\r\n                        value={enteredPasswordLogin}\r\n                      />\r\n                      {passwordInputIsInvalidLogin && (\r\n                        <div className=\"p-3\">\r\n                          <h6>Password must not be empty</h6>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div className={classes.actions}>\r\n                  {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n                  {isLoading && (\r\n                    <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n                  )}\r\n                  {isLogin && isInValidCredentials && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Invalid credentials, could not log you in.</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </section>\r\n          </Card.ImgOverlay>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StaffForm;","D:\\Project Work\\Frontend\\src\\pages\\Patient\\SearchDoctor.js",["282"],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\Map.js",["283"],"import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport { icon } from \"leaflet\";\r\n\r\nconst ICON = icon({\r\n  iconUrl: \"\\location.png\",\r\n  iconSize: [30, 30],\r\n})\r\nconst Map = () => {\r\n  const marker1 = { lat: 23.02, lng: 72.57 };\r\n  const marker2 = { lat: 22.3, lng: 70.8 };\r\n  const marker3 = { lat: 22.47, lng: 70.05 };\r\n  const marker4 = { lat: 21.60, lng: 71.22 };\r\n  const marker5 = { lat: 21.76, lng: 72.15 };\r\n  const marker6 = { lat: 21.52, lng: 70.45 };\r\n  const marker7 = { lat: 23.24, lng: 69.66 };\r\n  const marker8 = { lat: 19.07, lng: 72.87 };\r\n  const marker9 = { lat: 28.70, lng: 77.10 };\r\n  const marker10 = { lat: 21.17, lng: 72.83 };\r\n  const marker11 = { lat: 23.58, lng: 72.36 };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n      <MapContainer\r\n        className=\"map\"\r\n        center={marker2}\r\n        zoom={7}\r\n        style={{ height: 679, width: \"100%\" }}\r\n      >\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        <Marker icon={ICON} position={[marker1.lat, marker1.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker2.lat, marker2.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker3.lat, marker3.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker4.lat, marker4.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker5.lat, marker5.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker6.lat, marker6.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker7.lat, marker7.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker8.lat, marker8.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker9.lat, marker9.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker10.lat, marker10.lng]}></Marker>\r\n        <Marker icon={ICON} position={[marker11.lat, marker11.lng]}></Marker>\r\n      </MapContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Map;","D:\\Project Work\\Frontend\\src\\pages\\Patient\\UpdateProfile.js",["284"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport PatientImage from \"../../components/images/PatientVector.jpg\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport classes from \"../../components/Auth/PatientForm.module.css\";\r\nconst UpdateProfile = () => {\r\n  const history = useHistory();\r\n\r\n  const patientId = window.sessionStorage.getItem(\"patientId\");\r\n  const [patient, setPatient] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isExsistingUser, setIsExsistingUser] = useState(false);\r\n\r\n  const [enteredFirstName, setEnteredFirstName] = useState(patient.firstName);\r\n\r\n  const [enteredLastName, setEnteredLastName] = useState(patient.lastName);\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n\r\n  const [enteredMobileNumber, setEnteredMobileNumber] = useState(patient.mobileNumber);\r\n\r\n  const firstNameInputChangeHandler = (event) => {\r\n    setEnteredFirstName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const lastNameInputChangeHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const mobileNumberInputChangeHandler = (event) => {\r\n    setEnteredMobileNumber(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/detail/${patientId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const patientDetail = {\r\n          firstName: responseData.patient.firstName,\r\n          lastName: responseData.patient.lastName,\r\n          email: responseData.patient.email,\r\n          mobileNumber: responseData.patient.mobileNumber,\r\n        };\r\n        setPatient(patientDetail);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, [patientId]);\r\n\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        `http://localhost:5000/update/${patientId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: enteredFirstName,\r\n            lastName: enteredLastName,\r\n            mobileNumber: enteredMobileNumber,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n      if (responseData.status === \"201\") {\r\n        history.replace(\"/patient/detail\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsExsistingUser(true);\r\n        setEnteredEmail(\"\");\r\n        setEnteredFirstName(\"\");\r\n        setEnteredLastName(\"\");\r\n        setEnteredMobileNumber(\"\");\r\n\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n          <img\r\n            src={PatientImage}\r\n            className=\"img-fluid\"\r\n            alt=\"Phoneimage\"\r\n            style={{ width: \"600px\" }}\r\n          />\r\n        </div>\r\n        <div className={classes.loginbox}>\r\n          <Card.ImgOverlay>\r\n            <section className={classes.auth}>\r\n              <h3>UPDATE INFORMATION</h3>\r\n\r\n              <form onSubmit={formSubmitHandler}>\r\n                <div>\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"text\">First Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      required\r\n                      onChange={firstNameInputChangeHandler}\r\n                      defaultValue={patient.firstName}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"text\">Last Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      placeholder=\"Last Name\"\r\n                      required\r\n                      onChange={lastNameInputChangeHandler}\r\n                      defaultValue={patient.lastName}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"abc@gmail.com\"\r\n                      id=\"email\"\r\n                      required\r\n                      onChange={emailInputChangeHandler}\r\n                      defaultValue={patient.email}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"text\">Mobile Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"number\"\r\n                      placeholder=\"10 digit mobile number\"\r\n                      pattern=\"[0-9]{10}\"\r\n                      required\r\n                      onChange={mobileNumberInputChangeHandler}\r\n                      defaultValue={patient.mobileNumber}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                  {!isLoading && <button>Update Profile</button>}\r\n                  {isLoading && (\r\n                    <RingLoader\r\n                      color=\"white\"\r\n                      height={80}\r\n                      width={80}\r\n                    ></RingLoader>\r\n                  )}\r\n\r\n                  {isExsistingUser && (\r\n                    <div className=\"p-3\">\r\n                      <h6>User exists already, please login instead.</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </section>\r\n          </Card.ImgOverlay>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\UpdateDoctorProfile.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\UpdateStaffProfile.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffDetail.js",[],"D:\\Project Work\\Frontend\\src\\pages\\PaymentPage.js",[],{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":12,"column":19,"nodeType":"291","messageId":"292","endLine":12,"endColumn":29},{"ruleId":"293","severity":1,"message":"294","line":100,"column":11,"nodeType":"295","endLine":100,"endColumn":102},{"ruleId":"289","severity":1,"message":"290","line":12,"column":19,"nodeType":"291","messageId":"292","endLine":12,"endColumn":29},{"ruleId":"293","severity":1,"message":"294","line":101,"column":11,"nodeType":"295","endLine":102,"endColumn":83},{"ruleId":"293","severity":1,"message":"294","line":266,"column":9,"nodeType":"295","endLine":266,"endColumn":100},{"ruleId":"296","severity":1,"message":"297","line":24,"column":15,"nodeType":"295","endLine":24,"endColumn":142},{"ruleId":"298","severity":1,"message":"299","line":44,"column":48,"nodeType":"295","endLine":44,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":44,"column":98,"nodeType":"295","endLine":44,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":44,"column":147,"nodeType":"295","endLine":44,"endColumn":159},{"ruleId":"298","severity":1,"message":"299","line":55,"column":48,"nodeType":"295","endLine":55,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":55,"column":98,"nodeType":"295","endLine":55,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":55,"column":147,"nodeType":"295","endLine":55,"endColumn":159},{"ruleId":"298","severity":1,"message":"299","line":66,"column":48,"nodeType":"295","endLine":66,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":66,"column":98,"nodeType":"295","endLine":66,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":66,"column":147,"nodeType":"295","endLine":66,"endColumn":159},{"ruleId":"298","severity":1,"message":"299","line":77,"column":48,"nodeType":"295","endLine":77,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":77,"column":98,"nodeType":"295","endLine":77,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":77,"column":147,"nodeType":"295","endLine":77,"endColumn":159},{"ruleId":"296","severity":1,"message":"297","line":24,"column":13,"nodeType":"295","endLine":24,"endColumn":140},{"ruleId":"298","severity":1,"message":"299","line":44,"column":46,"nodeType":"295","endLine":44,"endColumn":58},{"ruleId":"298","severity":1,"message":"299","line":44,"column":96,"nodeType":"295","endLine":44,"endColumn":108},{"ruleId":"298","severity":1,"message":"299","line":44,"column":145,"nodeType":"295","endLine":44,"endColumn":157},{"ruleId":"298","severity":1,"message":"299","line":55,"column":46,"nodeType":"295","endLine":55,"endColumn":58},{"ruleId":"298","severity":1,"message":"299","line":55,"column":96,"nodeType":"295","endLine":55,"endColumn":108},{"ruleId":"298","severity":1,"message":"299","line":55,"column":145,"nodeType":"295","endLine":55,"endColumn":157},{"ruleId":"298","severity":1,"message":"299","line":66,"column":46,"nodeType":"295","endLine":66,"endColumn":58},{"ruleId":"298","severity":1,"message":"299","line":66,"column":96,"nodeType":"295","endLine":66,"endColumn":108},{"ruleId":"298","severity":1,"message":"299","line":66,"column":145,"nodeType":"295","endLine":66,"endColumn":157},{"ruleId":"298","severity":1,"message":"299","line":77,"column":46,"nodeType":"295","endLine":77,"endColumn":58},{"ruleId":"298","severity":1,"message":"299","line":77,"column":96,"nodeType":"295","endLine":77,"endColumn":108},{"ruleId":"298","severity":1,"message":"299","line":77,"column":145,"nodeType":"295","endLine":77,"endColumn":157},{"ruleId":"296","severity":1,"message":"297","line":23,"column":15,"nodeType":"295","endLine":23,"endColumn":142},{"ruleId":"298","severity":1,"message":"299","line":43,"column":48,"nodeType":"295","endLine":43,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":43,"column":98,"nodeType":"295","endLine":43,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":43,"column":147,"nodeType":"295","endLine":43,"endColumn":159},{"ruleId":"298","severity":1,"message":"299","line":54,"column":48,"nodeType":"295","endLine":54,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":54,"column":98,"nodeType":"295","endLine":54,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":54,"column":147,"nodeType":"295","endLine":54,"endColumn":159},{"ruleId":"298","severity":1,"message":"299","line":65,"column":48,"nodeType":"295","endLine":65,"endColumn":60},{"ruleId":"298","severity":1,"message":"299","line":65,"column":98,"nodeType":"295","endLine":65,"endColumn":110},{"ruleId":"298","severity":1,"message":"299","line":65,"column":147,"nodeType":"295","endLine":65,"endColumn":159},{"ruleId":"289","severity":1,"message":"300","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":31,"column":33,"nodeType":"295","endLine":31,"endColumn":85},{"ruleId":"298","severity":1,"message":"299","line":34,"column":33,"nodeType":"295","endLine":34,"endColumn":85},{"ruleId":"301","severity":1,"message":"302","line":40,"column":33,"nodeType":"295","messageId":"303","endLine":40,"endColumn":95,"fix":"304"},{"ruleId":"301","severity":1,"message":"302","line":41,"column":33,"nodeType":"295","messageId":"303","endLine":41,"endColumn":101,"fix":"305"},{"ruleId":"301","severity":1,"message":"302","line":42,"column":33,"nodeType":"295","messageId":"303","endLine":42,"endColumn":95,"fix":"306"},{"ruleId":"301","severity":1,"message":"302","line":43,"column":33,"nodeType":"295","messageId":"303","endLine":43,"endColumn":121,"fix":"307"},{"ruleId":"301","severity":1,"message":"302","line":44,"column":33,"nodeType":"295","messageId":"303","endLine":44,"endColumn":113,"fix":"308"},{"ruleId":"309","severity":1,"message":"310","line":28,"column":6,"nodeType":"311","endLine":28,"endColumn":8,"suggestions":"312"},{"ruleId":"289","severity":1,"message":"290","line":13,"column":19,"nodeType":"291","messageId":"292","endLine":13,"endColumn":29},{"ruleId":"293","severity":1,"message":"294","line":101,"column":11,"nodeType":"295","endLine":101,"endColumn":102},{"ruleId":"309","severity":1,"message":"313","line":28,"column":8,"nodeType":"311","endLine":28,"endColumn":16,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":7,"column":13,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14,"suggestions":"319"},{"ruleId":"289","severity":1,"message":"320","line":22,"column":10,"nodeType":"291","messageId":"292","endLine":22,"endColumn":22},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'setIsLogin' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"323","text":"324"},{"range":"325","text":"324"},{"range":"326","text":"324"},{"range":"327","text":"324"},{"range":"328","text":"324"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'patientId'. Either include it or remove the dependency array.","ArrayExpression",["329"],"React Hook useEffect has a missing dependency: 'searchRecords'. Either include it or remove the dependency array.",["330"],"no-useless-escape","Unnecessary escape character: \\l.","Literal","unnecessaryEscape",["331","332"],"'enteredEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2497,2497]," rel=\"noreferrer\"",[2670,2670],[2836,2836],[3026,3026],[3208,3208],{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"messageId":"337","fix":"338","desc":"339"},{"messageId":"340","fix":"341","desc":"342"},"Update the dependencies array to be: [patientId]",{"range":"343","text":"344"},"Update the dependencies array to be: [search, searchRecords]",{"range":"345","text":"346"},"removeEscape",{"range":"347","text":"348"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"349","text":"350"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[848,850],"[patientId]",[1080,1088],"[search, searchRecords]",[224,225],"",[224,224],"\\"]