[{"D:\\Project Work\\Frontend\\src\\index.js":"1","D:\\Project Work\\Frontend\\src\\App.js":"2","D:\\Project Work\\Frontend\\src\\pages\\HomePage.js":"3","D:\\Project Work\\Frontend\\src\\components\\Profile\\UserProfile.js":"4","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StartingPageContent.js":"5","D:\\Project Work\\Frontend\\src\\components\\Profile\\ProfileForm.js":"6","D:\\Project Work\\Frontend\\src\\store\\auth-context.js":"7","D:\\Project Work\\Frontend\\src\\pages\\AdminPage.js":"8","D:\\Project Work\\Frontend\\src\\components\\Auth\\AdminForm.js":"9","D:\\Project Work\\Frontend\\src\\pages\\DoctorPage.js":"10","D:\\Project Work\\Frontend\\src\\pages\\PatientPage.js":"11","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js":"12","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js":"13","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminHomePage.js":"14","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js":"15","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageStaffPage.js":"16","D:\\Project Work\\Frontend\\src\\components\\Auth\\DoctorForm.js":"17","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageDoctorForm.js":"18","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js":"19","D:\\Project Work\\Frontend\\src\\components\\Auth\\PatientForm.js":"20","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageStaffForm.js":"21","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js":"22","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\AdminStarting.js":"23","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminMainNavigation.js":"24","D:\\Project Work\\Frontend\\src\\pages\\MainNavigation.js":"25","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorAboutUs.js":"26","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorContactUs.js":"27","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientHomePage.js":"28","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorDetails.js":"29","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorHomePage.js":"30","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientContactUs.js":"31","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDetails.js":"32","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientAboutUs.js":"33","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\PatientStarting.js":"34","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\DoctorStarting.js":"35","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js":"36","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientMainNavigation.js":"37","D:\\Project Work\\Frontend\\src\\pages\\HomeAboutUs.js":"38","D:\\Project Work\\Frontend\\src\\pages\\Footer.js":"39","D:\\Project Work\\Frontend\\src\\pages\\HomeContactUs.js":"40","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDocuments.js":"41","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffHomePage.js":"42","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadPDFDocument.js":"43","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadDocument.js":"44","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffManagePatientId.js":"45","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffMainNavigation.js":"46","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StaffStarting.js":"47","D:\\Project Work\\Frontend\\src\\pages\\StaffPage.js":"48","D:\\Project Work\\Frontend\\src\\components\\Auth\\StaffForm.js":"49"},{"size":392,"mtime":1644821961107,"results":"50","hashOfConfig":"51"},{"size":4016,"mtime":1645376911099,"results":"52","hashOfConfig":"51"},{"size":338,"mtime":1643910651488,"results":"53","hashOfConfig":"51"},{"size":278,"mtime":1620031994000,"results":"54","hashOfConfig":"51"},{"size":2301,"mtime":1645378601122,"results":"55","hashOfConfig":"51"},{"size":429,"mtime":1620031994000,"results":"56","hashOfConfig":"51"},{"size":719,"mtime":1643392031470,"results":"57","hashOfConfig":"51"},{"size":302,"mtime":1643910629629,"results":"58","hashOfConfig":"51"},{"size":5236,"mtime":1645252131935,"results":"59","hashOfConfig":"51"},{"size":321,"mtime":1643910640453,"results":"60","hashOfConfig":"51"},{"size":326,"mtime":1643910731911,"results":"61","hashOfConfig":"51"},{"size":422,"mtime":1643910490047,"results":"62","hashOfConfig":"51"},{"size":423,"mtime":1643910606617,"results":"63","hashOfConfig":"51"},{"size":381,"mtime":1643910523206,"results":"64","hashOfConfig":"51"},{"size":418,"mtime":1643910511826,"results":"65","hashOfConfig":"51"},{"size":416,"mtime":1643910616792,"results":"66","hashOfConfig":"51"},{"size":5382,"mtime":1645252113405,"results":"67","hashOfConfig":"51"},{"size":13576,"mtime":1644821317088,"results":"68","hashOfConfig":"51"},{"size":3164,"mtime":1645031722204,"results":"69","hashOfConfig":"51"},{"size":16402,"mtime":1645116593741,"results":"70","hashOfConfig":"51"},{"size":12067,"mtime":1644821429292,"results":"71","hashOfConfig":"51"},{"size":3069,"mtime":1645031712075,"results":"72","hashOfConfig":"51"},{"size":2503,"mtime":1645378884954,"results":"73","hashOfConfig":"51"},{"size":3989,"mtime":1645031933790,"results":"74","hashOfConfig":"51"},{"size":4027,"mtime":1645376114995,"results":"75","hashOfConfig":"51"},{"size":2610,"mtime":1645120202637,"results":"76","hashOfConfig":"51"},{"size":380,"mtime":1644822870062,"results":"77","hashOfConfig":"51"},{"size":401,"mtime":1644822625335,"results":"78","hashOfConfig":"51"},{"size":3132,"mtime":1645116109017,"results":"79","hashOfConfig":"51"},{"size":391,"mtime":1644822286238,"results":"80","hashOfConfig":"51"},{"size":387,"mtime":1644822906581,"results":"81","hashOfConfig":"51"},{"size":4267,"mtime":1645375578341,"results":"82","hashOfConfig":"51"},{"size":2475,"mtime":1645120243148,"results":"83","hashOfConfig":"51"},{"size":1473,"mtime":1644821774515,"results":"84","hashOfConfig":"51"},{"size":1467,"mtime":1645380223814,"results":"85","hashOfConfig":"51"},{"size":2189,"mtime":1645380102559,"results":"86","hashOfConfig":"51"},{"size":2247,"mtime":1645379913837,"results":"87","hashOfConfig":"51"},{"size":3210,"mtime":1645119581315,"results":"88","hashOfConfig":"51"},{"size":1644,"mtime":1644942266980,"results":"89","hashOfConfig":"51"},{"size":3855,"mtime":1645026250147,"results":"90","hashOfConfig":"51"},{"size":2253,"mtime":1645375640815,"results":"91","hashOfConfig":"51"},{"size":381,"mtime":1645375700214,"results":"92","hashOfConfig":"51"},{"size":4560,"mtime":1645376252475,"results":"93","hashOfConfig":"51"},{"size":2505,"mtime":1645376284771,"results":"94","hashOfConfig":"51"},{"size":3477,"mtime":1645375814919,"results":"95","hashOfConfig":"51"},{"size":1804,"mtime":1645380587150,"results":"96","hashOfConfig":"51"},{"size":433,"mtime":1645117190452,"results":"97","hashOfConfig":"51"},{"size":316,"mtime":1645376626959,"results":"98","hashOfConfig":"51"},{"size":5677,"mtime":1645252155085,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"cnbsz4",{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"102"},"D:\\Project Work\\Frontend\\src\\index.js",[],["214","215"],"D:\\Project Work\\Frontend\\src\\App.js",[],"D:\\Project Work\\Frontend\\src\\pages\\HomePage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Profile\\UserProfile.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\Project Work\\Frontend\\src\\components\\Profile\\ProfileForm.js",[],"D:\\Project Work\\Frontend\\src\\store\\auth-context.js",[],"D:\\Project Work\\Frontend\\src\\pages\\AdminPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\AdminForm.js",["216","217","218"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AdminForm.module.css\";\nimport { Form, Group ,Card} from \"react-bootstrap\";\nimport AdminImage from \"../images/Geometric3.png\";\nconst AdminForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\n\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\n    useState(false);\n\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\n    useState(false);\n\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\n  const emailInputIsInvalidLogin =\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\n\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\n  const passwordInputIsInvalidLogin =\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\n\n  const emailInputChangeHandlerLogin = (event) => {\n    setEnteredEmailLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const emailInputBlurHandlerLogin = () => {\n    setEnteredEmailLoginTouched(true);\n  };\n\n  const passwordInputChangeHandlerLogin = (event) => {\n    setEnteredPasswordLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const passwordInputBlurHandlerLogin = () => {\n    setEnteredPasswordLoginTouched(true);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLogin) {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(\"http://localhost:5000/admin/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: enteredEmailLogin,\n            password: enteredPasswordLogin,\n          }),\n        });\n\n        const responseData = await response.json();\n        setIsLoading(false);\n\n        if (responseData.status === \"201\") {\n          authCtx.login(responseData.token);\n          window.sessionStorage.setItem(\"adminId\", responseData.adminId);\n          history.replace(\"/admin/home\");\n          console.log(responseData.message);\n        } else {\n          setIsInValidCredentials(true);\n          setEnteredEmailLogin(\"\");\n          setEnteredPasswordLogin(\"\");\n\n          setEnteredEmailLoginTouched(false);\n          setEnteredPasswordLoginTouched(false);\n          console.log(responseData.message);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Card.Img src={AdminImage} alt=\"Card image\" height={850}/>\n      <Card.ImgOverlay>\n      <section className={classes.auth}>\n        <h3>ADMIN LOGIN</h3>\n\n        <form onSubmit={formSubmitHandler}>\n          {isLogin && (\n            <div>\n              <div className={classes.control}>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"abc@gmail.com\"\n                  required\n                  onChange={emailInputChangeHandlerLogin}\n                  onBlur={emailInputBlurHandlerLogin}\n                  value={enteredEmailLogin}\n                />\n                {emailInputIsInvalidLogin && (\n                  <div className=\"p-3\">\n                    <h6>Email must not be empty</h6>\n                  </div>\n                )}\n              </div>\n              <div className={classes.control}>\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  onChange={passwordInputChangeHandlerLogin}\n                  onBlur={passwordInputBlurHandlerLogin}\n                  value={enteredPasswordLogin}\n                />\n                {passwordInputIsInvalidLogin && (\n                  <div className=\"p-3\">\n                    <h6 calssName=\"error\">Password must not be empty</h6>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          <div className={classes.actions}>\n            {!isLoading && <button disabled={!formIsValid}>Login</button>}\n            {isLoading && (\n              <RingLoader color=\"white\" height={80} width={80}></RingLoader>\n            )}\n            {isLogin && isInValidCredentials && (\n              <div className=\"p-3\">\n                <h6 calssName=\"error\">Invalid credentials, could not log you in.</h6>\n              </div>\n            )}\n          </div>\n        </form>\n      </section>\n      </Card.ImgOverlay>  \n    </React.Fragment>\n  );\n};\n\nexport default AdminForm;","D:\\Project Work\\Frontend\\src\\pages\\DoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\PatientPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageStaffPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\DoctorForm.js",["219","220","221"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./DoctorForm.module.css\";\r\nimport { Form, Group ,Card} from \"react-bootstrap\";\r\nimport DoctorImage from \"../images/Geometric2.png\";\r\nconst DoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/doctor/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"doctorId\", responseData.doctorId);\r\n          history.replace({\r\n            pathname: \"/doctor/detail\",\r\n            // doctorId : responseData.doctorDetail._id\r\n          });\r\n          // console.log(responseData.message);\r\n          // console.log(responseData.doctorId);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Img src={DoctorImage} alt=\"Card image\" height={850}/>\r\n      <Card.ImgOverlay>\r\n    <section className={classes.auth}>\r\n      <h3>DOCTOR LOGIN</h3>\r\n\r\n      <form onSubmit={formSubmitHandler}>\r\n        {isLogin && (\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"abc@gmail.com\"\r\n                required\r\n                onChange={emailInputChangeHandlerLogin}\r\n                onBlur={emailInputBlurHandlerLogin}\r\n                value={enteredEmailLogin}\r\n              />\r\n              {emailInputIsInvalidLogin && (\r\n                <div className=\"p-3\">\r\n                  <h6>Email must not be empty</h6>\r\n               </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                onChange={passwordInputChangeHandlerLogin}\r\n                onBlur={passwordInputBlurHandlerLogin}\r\n                value={enteredPasswordLogin}\r\n              />\r\n              {passwordInputIsInvalidLogin && \r\n              <div className=\"p-3\">\r\n              <h6>Password must not be empty</h6>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.actions}>\r\n          {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n          {isLoading && (\r\n            <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n          )}\r\n          {isLogin && isInValidCredentials && (\r\n            <div className=\"p-3\">\r\n              <h6>Invalid credentials, could not log you in.</h6>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n    </Card.ImgOverlay>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorForm;","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageDoctorForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js",["222"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteDoctorForm.module.css\";\r\n\r\nconst AdminDeleteDoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist , setIsNotExist] = useState(false);\r\n\r\n  const [enteredDoctorId, setEnteredDoctorId] = useState(\"\");\r\n  const [enteredDoctorIdTouched, setEnteredDoctorIdTouched] = useState(false);\r\n\r\n  const enteredDoctorIdIsValid = enteredDoctorId.trim() !== \"\";\r\n  const doctorIdInputIsInValid =\r\n    !enteredDoctorIdIsValid && enteredDoctorIdTouched;\r\n\r\n  const doctorIdInputChangeHandler = (event) => {\r\n    setEnteredDoctorId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const doctorIdInputBlurHandler = (event) => {\r\n    setEnteredDoctorIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredDoctorIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"Doctor Deleted Successfully\");\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\"http://localhost:5000/doctor/delete\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id : enteredDoctorId\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"200\") {\r\n          // authCtx.login(responseData.token);\r\n          history.replace(\"/\");\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsNotExist(true);\r\n          history.replace(\"/admin/delete-doctor\");\r\n          console.log(responseData.message);\r\n        }\r\n      }catch (err) {\r\n        console.log({err});\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n    <section className={classes.auth}>\r\n      <h3>Delete Doctor</h3>\r\n      \r\n      <form onSubmit={formSubmitHandler}>\r\n        <div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"text\">Doctor ID</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"id\"\r\n              placeholder=\"Enter Doctor ID\"\r\n              required\r\n              onChange={doctorIdInputChangeHandler}\r\n              onBlur={doctorIdInputBlurHandler}\r\n              value={enteredDoctorId}\r\n            />\r\n            {doctorIdInputIsInValid && <h6>Doctor ID must not be empty</h6>}\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button disabled={!formIsValid}>Delete</button>\r\n            {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && <h6>Doctor does not exist</h6>}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </section>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default AdminDeleteDoctorForm;","D:\\Project Work\\Frontend\\src\\components\\Auth\\PatientForm.js",["223","224"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport PatientImage from \"../images/Geometric1.png\"; \r\n//import classes from \"./AdminForm.module.css\";\r\nimport classes from \"./PatientForm.module.css\";\r\nimport { Form, Group, Card } from \"react-bootstrap\";\r\nconst PatientForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n  const [isExsistingUser, setIsExsistingUser] = useState(false);\r\n  const [isPasswordInValid, setIsPasswordInValid] = useState(false);\r\n\r\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\r\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\r\n\r\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\r\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\r\n\r\n  const [enteredConfirmPassword, setEnteredConfirmPassword] = useState(\"\");\r\n  const [enteredConfirmPasswordTouched, setEnteredConfirmPasswordTouched] =\r\n    useState(false);\r\n\r\n  const [enteredMobileNumber, setEnteredMobileNumber] = useState(\"\");\r\n  const [enteredMobileNumberTouched, setEnteredMobileNumberTouched] =\r\n    useState(false);\r\n\r\n  const enteredFirstNameIsValid = enteredFirstName.trim() !== \"\";\r\n  const firstNameInputIsInValid =\r\n    !enteredFirstNameIsValid && enteredFirstNameTouched;\r\n\r\n  const enteredLastNameIsValid = enteredLastName.trim() !== \"\";\r\n  const lastNameInputIsInValid =\r\n    !enteredLastNameIsValid && enteredLastNameTouched;\r\n\r\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\r\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const enteredPasswordIsValid = enteredPassword.trim() !== \"\";\r\n  const passwordInputIsInValid =\r\n    !enteredPasswordIsValid && enteredPasswordTouched;\r\n\r\n  const enteredConfirmPasswordIsValid = enteredConfirmPassword.trim() !== \"\";\r\n  const ConfirmPasswordInputIsInValid =\r\n    !enteredConfirmPasswordIsValid && enteredConfirmPasswordTouched;\r\n\r\n  const enteredMobileNumberIsValid = enteredMobileNumber.trim() !== \"\";\r\n  const mobileNumberInputIsInValid =\r\n    !enteredMobileNumberIsValid && enteredMobileNumberTouched;\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const firstNameInputChangeHandler = (event) => {\r\n    setEnteredFirstName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const firstNameInputBlurHandler = (event) => {\r\n    setEnteredFirstNameTouched(true);\r\n  };\r\n\r\n  const lastNameInputChangeHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const lastNameInputBlurHandler = (event) => {\r\n    setEnteredLastNameTouched(true);\r\n  };\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const emailInputBlurHandler = (event) => {\r\n    setEnteredEmailTouched(true);\r\n  };\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const passwordInputBlurHandler = (event) => {\r\n    setEnteredPasswordTouched(true);\r\n  };\r\n\r\n  const confirmPasswordInputChangeHandler = (event) => {\r\n    setEnteredConfirmPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const confirmPasswordInputBlurHandler = (event) => {\r\n    setEnteredConfirmPasswordTouched(true);\r\n  };\r\n\r\n  const mobileNumberInputChangeHandler = (event) => {\r\n    setEnteredMobileNumber(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const mobileNumberInputBlurHandler = (event) => {\r\n    setEnteredMobileNumberTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n  if (\r\n    enteredEmailIsValid &&\r\n    enteredFirstNameIsValid &&\r\n    enteredLastNameIsValid &&\r\n    enteredPasswordIsValid &&\r\n    enteredConfirmPasswordIsValid &&\r\n    enteredMobileNumberIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n          history.replace(\"/patient/detail\");\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"http://localhost:5000/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: enteredFirstName,\r\n            lastName: enteredLastName,\r\n            email: enteredEmail,\r\n            mobileNumber: enteredMobileNumber,\r\n            password: enteredPassword,\r\n            confirmPassword: enteredConfirmPassword,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (\r\n          responseData.status !== \"422\" &&\r\n          enteredPassword === enteredConfirmPassword\r\n        ) {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"userId\", responseData.userId);\r\n          history.replace(\"/patient/home\");\r\n          console.log(responseData.message);\r\n        } else if (enteredPassword !== enteredConfirmPassword) {\r\n          setIsPasswordInValid(true);\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsExsistingUser(true);\r\n          setEnteredEmail(\"\");\r\n          setEnteredFirstName(\"\");\r\n          setEnteredLastName(\"\");\r\n          setEnteredMobileNumber(\"\");\r\n          setEnteredPassword(\"\");\r\n          setEnteredConfirmPassword(\"\");\r\n\r\n          setEnteredConfirmPasswordTouched(false);\r\n          setEnteredPasswordTouched(false);\r\n          setEnteredEmailTouched(false);\r\n          setEnteredFirstNameTouched(false);\r\n          setEnteredLastNameTouched(false);\r\n          setEnteredMobileNumberTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Img src={PatientImage} alt=\"Card image\" height={1050} />\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>{isLogin ? \"PATIENT LOGIN\" : \"SIGN UP\"}</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {!isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    placeholder=\"First Name\"\r\n                    required\r\n                    onChange={firstNameInputChangeHandler}\r\n                    onBlur={firstNameInputBlurHandler}\r\n                    value={enteredFirstName}\r\n                  />\r\n                  {firstNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>First Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"lname\"\r\n                    placeholder=\"Last Name\"\r\n                    required\r\n                    onChange={lastNameInputChangeHandler}\r\n                    onBlur={lastNameInputBlurHandler}\r\n                    value={enteredLastName}\r\n                  />\r\n                  {lastNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Last Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    id=\"email\"\r\n                    required\r\n                    onChange={emailInputChangeHandler}\r\n                    onBlur={emailInputBlurHandler}\r\n                    value={enteredEmail}\r\n                  />\r\n                  {emailInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Mobile Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"number\"\r\n                    placeholder=\"10 digit mobile number\"\r\n                    pattern=\"[0-9]{10}\"\r\n                    required\r\n                    onChange={mobileNumberInputChangeHandler}\r\n                    onBlur={mobileNumberInputBlurHandler}\r\n                    value={enteredMobileNumber}\r\n                  />\r\n                  {mobileNumberInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Mobile Number must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={passwordInputChangeHandler}\r\n                    onBlur={passwordInputBlurHandler}\r\n                    value={enteredPassword}\r\n                  />\r\n                  {passwordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"cpassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={confirmPasswordInputChangeHandler}\r\n                    onBlur={confirmPasswordInputBlurHandler}\r\n                    value={enteredConfirmPassword}\r\n                  />\r\n                  {ConfirmPasswordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Confirm Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && (\r\n                <button disabled={!formIsValid}>\r\n                  {isLogin ? \"Login\" : \"Create Account\"}\r\n                </button>\r\n              )}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isExsistingUser && (\r\n                <div className=\"p-3\">\r\n                  <h6>User exists already, please login instead.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isPasswordInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Password and Confirm Password must be same.</h6>\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                className={classes.toggle}\r\n                onClick={switchAuthModeHandler}\r\n              >\r\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientForm;","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageStaffForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js",["225"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteStaffForm.module.css\";\r\n\r\nconst AdminDeleteStaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist , setIsNotExist] = useState(false);\r\n\r\n  const [enteredStaffId, setEnteredStaffId] = useState(\"\");\r\n  const [enteredStaffIdTouched, setEnteredStaffIdTouched] = useState(false);\r\n\r\n  const enteredStaffIdIsValid = enteredStaffId.trim() !== \"\";\r\n  const staffIdInputIsInValid = !enteredStaffIdIsValid && enteredStaffIdTouched;\r\n\r\n  const doctorIdInputChangeHandler = (event) => {\r\n    setEnteredStaffId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const doctorIdInputBlurHandler = (event) => {\r\n    setEnteredStaffIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredStaffIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/staff/delete\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredStaffId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"200\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/admin/delete-staff\");\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Delete Staff</h3>\r\n\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Staff ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter Staff ID\"\r\n                required\r\n                onChange={doctorIdInputChangeHandler}\r\n                onBlur={doctorIdInputBlurHandler}\r\n                value={enteredStaffId}\r\n              />\r\n              {staffIdInputIsInValid && <h6>Staff ID must not be empty</h6>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Delete</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && <h6>Staff does not exist</h6>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDeleteStaffForm;","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\AdminStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminMainNavigation.js",["226","227","228"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./AdminMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst AdminMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const style = {\r\n    color: 'white',\r\n    fontSize: 16\r\n  };\r\n  return (\r\n    // <React.Fragment>\r\n    //   <header\r\n    //     className={`${classes.header} ${classes.brown} ${classes.highlightTextOut}`}\r\n    //   >\r\n    //     <NavLink to=\"/admin/home\">\r\n    //       <div className={classes.logo}>Welcome Admin</div>\r\n    //     </NavLink>\r\n    //     <ul>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-doctor\"\r\n    //           alt=\"ADD DOCTOR\"\r\n    //         >\r\n    //           ADD DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-staff\"\r\n    //           alt=\"ADD STAFF\"\r\n    //         >\r\n    //           ADD STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-doctor\"\r\n    //           alt=\"DELETE DOCTOR\"\r\n    //         >\r\n    //           DELETE DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-staff\"\r\n    //           alt=\"DELETE STAFF\"\r\n    //         >\r\n    //           DELETE STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <Button\r\n    //             variant=\"outline-info\"\r\n    //             onClick={logoutHandler}\r\n    //             alt=\"LOGOUT\"\r\n    //           >\r\n    //             LOGOUT\r\n    //           </Button>\r\n    //         </li>\r\n    //       )}\r\n    //     </ul>\r\n    //   </header>\r\n    // </React.Fragment>\r\n\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/admin/home\">\r\n            Welcome Admin\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/add-doctor\" style={style}\r\n            >\r\n              ADD DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/add-staff\" style={style}\r\n            >\r\n              ADD STAFF\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/delete-doctor\" style={style}\r\n            >\r\n              DELETE DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/delete-staff\" style={style}\r\n            >\r\n              DELETE STAFF\r\n            </Nav.Link>\r\n          </Nav>\r\n          {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\" style={style}\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminMainNavigation;","D:\\Project Work\\Frontend\\src\\pages\\MainNavigation.js",["229","230","231","232","233","234","235"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nimport AuthContext from \"../store/auth-context\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst MainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const style1 = {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n  };\r\n  const style2 = {\r\n    color: \"pink\",\r\n    fontSize: 20,\r\n  };\r\n\r\n  return (\r\n    // <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    // <header className={ `${classes.brown} ${classes.highlightTextOut}`}>\r\n    //   <NavLink to=\"/\">\r\n    //     <div className={classes.logo}>Work in Progress</div>\r\n    //   </NavLink>\r\n    //   <nav>\r\n    //     <ul>\r\n    //       {!isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"ADMIN\"to=\"/admin/login\">\r\n    //             ADMIN\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {!isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"PATIENT LOGIN\"to=\"/patient/login\">\r\n    //             PATIENT LOGIN\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {!isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"DOCTOR LOGIN\"to=\"/doctor/login\">\r\n    //             DOCTOR LOGIN\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"PROFILE\" to=\"/profile\">\r\n    //             PROFILE\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <button className={classes.active} onClick={logoutHandler} alt=\"LOGOUT\">LOGOUT</button>\r\n    //         </li>\r\n    //       )}\r\n    //     </ul>\r\n    //   </nav>\r\n    // </header>\r\n    // </nav>\r\n    //\r\n\r\n    <React.Fragment>\r\n      <Navbar bg=\"p-3 bg-dark text-white\" sticky=\"top\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/\" style={style1}>\r\n            Work in progress\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/login\"\r\n              style={style1}\r\n            >\r\n              ADMIN\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/login\"\r\n              style={style1}\r\n            >\r\n              PATIENT\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/doctor/login\"\r\n              style={style1}\r\n            >\r\n              DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/login\"\r\n              style={style1}\r\n            >\r\n              STAFF\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/about\"\r\n              style={style1}\r\n            >\r\n              ABOUT US\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/contact\"\r\n              style={style1}\r\n            >\r\n              CONTACT US\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorAboutUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorDetails.js",["236"],"import React from \"react\";\r\nimport classes from \"./DoctorDetails.module.css\";\r\nimport DoctorMainNavigation from \"./DoctorMainNavigation\";\r\nimport IMG from '../../components/images/avatar.png';\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst DoctorDetails = () => {\r\n  const [doctor, setDoctor] = useState(\"\");\r\n  const doctorId = window.sessionStorage.getItem(\"doctorId\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/doctor/detail/${doctorId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const doctorDetail = {\r\n          firstName: responseData.doctor.firstName,\r\n          lastName: responseData.doctor.lastName,\r\n          email: responseData.doctor.email,\r\n          mobileNumber: responseData.doctor.mobileNumber,\r\n          address: responseData.doctor.address,\r\n          specialization: responseData.doctor.specialization,\r\n        };\r\n        setDoctor(doctorDetail);\r\n        // console.log(responseData.message);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, [doctorId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DoctorMainNavigation></DoctorMainNavigation>\r\n      {/* <li className={classes.doctor}>\r\n        <h2>{doctor.firstName}</h2>\r\n        <h2>{doctor.lastName}</h2>\r\n        <h2>{doctor.email}</h2>\r\n        <h2>{doctor.mobileNumber}</h2>\r\n        <h2>{doctor.address}</h2>\r\n        <h2>{doctor.specialization}</h2>\r\n      </li> */}\r\n      <div className=\"background1\">\r\n        <div className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"90vh\" }}>\r\n          <Card style={{ width: '40rem' }} >\r\n            <Card.Img variant=\"top\" className=\"center\" style={{ maxHeight: \"100px\", maxWidth: \"100px\" }} src={IMG} />\r\n            <Card.Body>\r\n              <Card.Title className=\"text-center\"><strong>Doctor Information</strong></Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\" style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>First Name : {doctor.firstName}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Last Name : {doctor.lastName}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Email address : {doctor.email}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Mobile Number : {doctor.mobileNumber}</ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Address : </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>Age : </ListGroupItem>\r\n            </ListGroup>\r\n            <Button type=\"button\" variant=\"btn btn-primary btn-sm w-10%\" style={{ width: \"150px\", margin: \"auto\", marginTop: \"20px\", marginBottom: \"20px\" }}>Update</Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorDetails;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDetails.js",["237","238"],"import React from \"react\";\r\nimport \"./PatientDetails.css\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport IMG from \"../../components/images/avatar.png\";\r\nimport { Card, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst PatientDetails = () => {\r\n  const [patient, setPatient] = useState(\"\");\r\n  const [mapDoc, setMapDoc] = useState([]);\r\n\r\n  const patientId = window.sessionStorage.getItem(\"patientId\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/detail/${patientId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const patientDetail = {\r\n          firstName: responseData.patient.firstName,\r\n          lastName: responseData.patient.lastName,\r\n          email: responseData.patient.email,\r\n          mobileNumber: responseData.patient.mobileNumber,\r\n          // doc:responseData.patient.documents,\r\n        };\r\n        setPatient(patientDetail);\r\n\r\n        // patient.doc.map((doc)=>{\r\n        //   console.log(doc)\r\n        //   setMapDoc(doc);\r\n        // });\r\n        // console.log(patient.doc.patienDoc);\r\n        // patient.doc.map((doc)=>{\r\n        //   setMapDoc(doc);\r\n        // })\r\n\r\n        // const p = responseData.patient.documents.map((doc)=>{\r\n        //   <li>{doc}</li>\r\n        // })\r\n        // console.log(p);\r\n        // console.log(responseData.patient.documents);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, [patientId]);\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n      {/* <li className={classes.patient}>\r\n        <h2>{patient.firstName}</h2>\r\n        <h2>{patient.lastName}</h2>\r\n        <h2>{patient.email}</h2>\r\n        <h2>{patient.mobileNumber}</h2>\r\n      </li> */}\r\n      <div className=\"background1\">\r\n        <div\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ minHeight: \"90vh\" }}\r\n        >\r\n          <Card style={{ width: \"40rem\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              className=\"center\"\r\n              style={{ maxHeight: \"100px\", maxWidth: \"100px\" }}\r\n              src={IMG}\r\n            />\r\n            <Card.Body>\r\n              <Card.Title className=\"text-center\">\r\n                <strong>Patient Information</strong>\r\n              </Card.Title>\r\n            </Card.Body>\r\n            <ListGroup\r\n              className=\"list-group-flush\"\r\n              style={{ marginLeft: \"10px\", marginRight: \"10px\" }}\r\n            >\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                First Name : {patient.firstName}\r\n              </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                Last Name : {patient.lastName}\r\n              </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                Email address : {patient.email}\r\n              </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                Mobile Number : {patient.mobileNumber}\r\n              </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                <NavLink to=\"/patient/document\" exact>\r\n                  Patient Documents\r\n                </NavLink>\r\n              </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                Address :{\" \"}\r\n              </ListGroupItem>\r\n              <ListGroupItem style={{ fontFamily: \"verdana\" }}>\r\n                Age :{\" \"}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"btn btn-primary btn-sm w-10%\"\r\n              style={{\r\n                width: \"150px\",\r\n                margin: \"auto\",\r\n                marginTop: \"20px\",\r\n                marginBottom: \"20px\",\r\n              }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientDetails;","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientAboutUs.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\PatientStarting.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\DoctorStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js",["239","240","241","242"],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientMainNavigation.js",["243","244","245","246"],"D:\\Project Work\\Frontend\\src\\pages\\HomeAboutUs.js",["247","248","249"],"import React from \"react\";\r\n//import PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport './HomeAboutUs.css';\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport {Placeholder,Card,Button} from 'react-bootstrap';\r\nimport Footer from './Footer';\r\nconst HomeAboutUs = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <MainNavigation></MainNavigation>\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"title\">\r\n            <h1>About Us</h1>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"article\">\r\n              <h4>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam lacinia luctus ullamcorper. Mauris tincidunt ex sit amet leo eleifend, in venenatis elit efficitur. Ut at mi sit amet nunc ultrices mattis vel sed mi. Donec fermentum vulputate tellus imperdiet fringilla. Nam ac ligula tincidunt, egestas odio vel, vulputate dolor. Donec non nibh mollis, tincidunt ligula non, pulvinar ipsum. Nullam tempus dolor tellus, id consectetur nunc vulputate in. Donec venenatis, magna at eleifend eleifend, turpis libero malesuada dui, sed semper diam justo vitae ante. Phasellus euismod justo tortor, a tempus nunc faucibus imperdiet.\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-section\">\r\n            <img src=\"https://st2.depositphotos.com/3591429/5997/i/600/depositphotos_59977559-stock-photo-hands-holding-word-about-us.jpg\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"d-flex justify-content-evenly\">\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src=\"https://img.freepik.com/free-vector/doctor-character-background_1270-84.jpg?size=338&ext=jpg\" />\r\n          <Card.Body>\r\n            <Card.Title>Robert Wire</Card.Title>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the bulk\r\n              of the card's content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQyFIj1U11yXvvZ8PIIA97ptuOi2YIQ9KOGnfvWOTPa293UZDRQyZkOZeTnMMV1B54MMkw&usqp=CAU\" />\r\n          <Card.Body>\r\n            <Card.Title>Alisia Markina</Card.Title>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the bulk\r\n              of the card's content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Img variant=\"top\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTzv5AS_0mQGkY1nyw-PP_velSo36z0Fm1U83oBUN7Wv_Mk2VRbs9V0fiXE2ZgjpS4WF1o&usqp=CAU\" />\r\n          <Card.Body>\r\n            <Card.Title>Andrew Magwire</Card.Title>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the bulk\r\n              of the card's content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeAboutUs;","D:\\Project Work\\Frontend\\src\\pages\\Footer.js",[],"D:\\Project Work\\Frontend\\src\\pages\\HomeContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDocuments.js",["250","251"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst PatientDocuments = (props) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  const patientId = window.sessionStorage.getItem(\"patientId\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/detail/${patientId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const patientDoc = {\r\n          doc: responseData.patient.documents,\r\n        };\r\n        // console.log(responseData.patient);\r\n        // const doc = responseData.patient.documents[0].patientDoc;\r\n        // console.log(patientDoc.doc);\r\n        setDocuments(patientDoc.doc);\r\n\r\n        // console.log();\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const displayPatientDoc = (e, index) => {\r\n    console.log(index);\r\n    fetch(`http://localhost:5000/documents/${patientId}/${index}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/pdf\",\r\n      },\r\n    })\r\n      .then((res) => res.blob())\r\n      .then((response) => {\r\n        //Create a Blob from the PDF Stream\r\n        console.log(\"Helloo\");\r\n        console.log(response);\r\n        const file = new Blob([response], {\r\n          type: \"application/pdf\",\r\n        });\r\n        //Build a URL from the file\r\n        const fileURL = URL.createObjectURL(file);\r\n        //Open the URL on new Window\r\n        window.open(fileURL);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //   console.log(patientId);\r\n  //   const url = `documents/${patientId}`;\r\n  //   console.log(url);\r\n  return (\r\n    <React.Fragment>\r\n      {documents.map((doc, index) => (\r\n        <NavLink\r\n          to=\"/patient/document\"\r\n          onClick={(e) => displayPatientDoc(e, index)}\r\n          key={doc.patientDoc}\r\n        >\r\n          <h1>{doc.patientDoc}</h1>\r\n        </NavLink>\r\n      ))}\r\n      {/* <h1>{props.id}</h1> */}\r\n      <h1>Welcome</h1>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PatientDocuments;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadPDFDocument.js",["252","253","254","255","256","257"],"import { React, useState, useEffect, useRef } from \"react\";\r\nimport StaffMainNavigation from \"./StaffMainNavigation\";\r\nimport classes from \"./UploadPDFDocument.module.css\";\r\nimport { Worker } from \"@react-pdf-viewer/core\";\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\nimport axios from \"axios\";\r\nimport { defaultLayoutPlugin } from \"@react-pdf-viewer/default-layout\";\r\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\r\nimport { Button, Nav, Navbar, Container, Card } from \"react-bootstrap\";\r\n//import DocumentImage from \"../../components/images/documentImage.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UploadPDFDocument = () => {\r\n  const history = useHistory();\r\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\r\n\r\n  const patientId = localStorage.getItem(\"patientId\");\r\n  // console.log(patientId);\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [uploadFile, setUploadFile] = useState(null);\r\n  const [file, seeFile] = useState(null);\r\n  const [pdfError, setPdfError] = useState(\"\");\r\n\r\n  const uploadHandler = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"Hellog\");\r\n\r\n    // formData.append(\"patient\", patientId);\r\n    // console.log(pdfFile);\r\n    // console.log( \"http://localhost:5000/upload/document/\"+patientId);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", uploadFile); //image\r\n    formData.append(\"patient\", patientId); \r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const url = \"http://localhost:5000/upload/document\";\r\n\r\n    axios\r\n      .post(url, formData, config)\r\n      .then((response) => {\r\n        alert(\"File Uploaded Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    history.replace(\"/staff/home\");\r\n  };\r\n\r\n  const handleFile = (e) => {\r\n    setUploadFile(e.target.files[0]);\r\n    let selectedFile = e.target.files[0];\r\n    // console.log(selectedFile.type);\r\n    if (selectedFile) {\r\n      if (selectedFile) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = (e) => {\r\n          setPdfError(\"\");\r\n          setPdfFile(e.target.result);\r\n        };\r\n      } else {\r\n        setPdfError(\"Not a valid pdf: Please select only PDF\");\r\n        setPdfFile(\"\");\r\n      }\r\n    } else {\r\n      console.log(\"please select a PDF\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Card.Img src={DocumentImage} alt=\"Card image\" height={850} />\r\n      <Card.ImgOverlay> */}\r\n        <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand as={NavLink} to=\"/staff/home\">\r\n              Welcome Staff\r\n            </Navbar.Brand>\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link\r\n                as={NavLink}\r\n                activeClassName={classes.active}\r\n                to=\"/staff/upload-patient-document\"\r\n              >\r\n                UPLOAD PATIENT DOCUMENT\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Container>\r\n        </Navbar>\r\n\r\n        <div className=\"container\">\r\n          <form className={classes.auth}>\r\n            <label>\r\n              <h5>Upload PDF</h5>\r\n            </label>\r\n            <br></br>\r\n\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={handleFile}\r\n            ></input>\r\n\r\n            {pdfError && <span className=\"text-danger\">{pdfError}</span>}\r\n          </form>\r\n          <div className={classes.center}>\r\n            {!pdfFile && (\r\n              <Button disabled variant=\"info\">\r\n                UPLOAD\r\n              </Button>\r\n            )}\r\n            {pdfFile && (\r\n              <Button onClick={uploadHandler} variant=\"info\">\r\n                UPLOAD\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <h5>View PDF</h5>\r\n          <div className=\"viewer\">\r\n            {pdfFile && (\r\n              <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.12.313/build/pdf.worker.min.js\">\r\n                <Viewer\r\n                  fileUrl={pdfFile}\r\n                  plugins={[defaultLayoutPluginInstance]}\r\n                ></Viewer>\r\n              </Worker>\r\n            )}\r\n\r\n            {!pdfFile && <h5>No file is selected yet</h5>}\r\n          </div>\r\n        </div>\r\n      {/* </Card.ImgOverlay> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadPDFDocument;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadDocument.js",["258","259","260","261","262","263","264","265"],"import { React, useState, useEffect, useRef } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport StaffMainNavigation from \"./StaffMainNavigation\";\r\nimport \"./UploadDocument.module.css\";\r\nimport { Worker } from \"@react-pdf-viewer/core\";\r\n// Import the main Viewer component\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\n// Import the styles\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\n// default layout plugin\r\nimport { defaultLayoutPlugin } from \"@react-pdf-viewer/default-layout\";\r\n// Import styles of default layout plugin\r\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport StaffManagePatientId from \"./StaffManagePatientId\";\r\nconst UploadDocument = () => {\r\n  //   const [file, setFile] = useState();\r\n  //   const [previewUrl, setPreviewUrl] = useState();\r\n\r\n  //   const filePickerRef = useRef();\r\n\r\n  //   useEffect(() => {\r\n  //     if (!file) {\r\n  //       return;\r\n  //     }\r\n  //     const fileReader = new FileReader();\r\n  //     fileReader.onload = () => {\r\n  //       setPreviewUrl(fileReader.result);\r\n  //     };\r\n  //     fileReader.readAsDataURL(file);\r\n  //   }, [file]);\r\n\r\n  //   const pickedHandler = (event) => {\r\n  //       console.log(event.target.files);\r\n  //     let pickedFile;\r\n  //     if (event.target.files && event.target.files.length === 1) {\r\n  //       pickedFile = event.target.files[0];\r\n  //       setFile(pickedFile);\r\n  //     } else {\r\n  //     }\r\n  //   };\r\n\r\n  //   const pickImageHandler = () => {\r\n  //     filePickerRef.current.click();\r\n  //   };\r\n\r\n  //   return (\r\n  //     <div>\r\n  //       <StaffMainNavigation></StaffMainNavigation>\r\n  //       <div className=\"form-control\">\r\n  //         <input\r\n  //           ref={filePickerRef}\r\n  //           style={{ display: \"none\" }}\r\n  //           type=\"file\"\r\n  //           accept=\".jpg,.png,.jpeg,.pdf\"\r\n  //           onChange={pickedHandler}\r\n  //         />\r\n\r\n  //         <div className=\"image-upload__preview\">\r\n  //           {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n  //           {!previewUrl && <p>Please pick an image.</p>}\r\n  //         </div>\r\n  //         <Button type=\"button\" onClick={pickImageHandler}>\r\n  //           PICK DOCUMENT\r\n  //         </Button>\r\n  //       </div>\r\n  //     </div>\r\n\r\n  return (\r\n    <div>\r\n      <StaffMainNavigation></StaffMainNavigation>\r\n      <StaffManagePatientId></StaffManagePatientId>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadDocument;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffManagePatientId.js",["266"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./StaffManagePatientId.module.css\";\r\n\r\nconst StaffManagePatientId = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist, setIsNotExist] = useState(false);\r\n\r\n  const [enteredPatientId, setEnteredPatientId] = useState(\"\");\r\n  const [enteredPatientIdTouched, setEnteredPatientIdTouched] = useState(false);\r\n\r\n  const enteredPatientIdIsValid = enteredPatientId.trim() !== \"\";\r\n  const patientIdInputIsInValid = !enteredPatientIdIsValid && enteredPatientIdTouched;\r\n\r\n  const patientIdInputChangeHandler = (event) => {\r\n    setEnteredPatientId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const patientIdInputBlurHandler = (event) => {\r\n    setEnteredPatientIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredPatientIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/find/patient\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredPatientId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"201\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/staff/upload-patient-document\");\r\n        // console.log(responseData.message);\r\n\r\n        // console.log(responseData.patientId);\r\n        localStorage.setItem(\"patientId\",responseData.patientId);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/staff/manage-patient-id\");\r\n        console.log(responseData.message);\r\n        \r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Search Patient</h3>\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Patient ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter patient ID\"\r\n                required\r\n                onChange={patientIdInputChangeHandler}\r\n                onBlur={patientIdInputBlurHandler}\r\n                value={enteredPatientId}\r\n              />\r\n              {patientIdInputIsInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Patient ID must not be empty</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Search</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && (\r\n                <div className=\"p-3\">\r\n                  <h6>Patient does not exist</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffManagePatientId;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffMainNavigation.js",["267","268","269"],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StaffStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\StaffPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\StaffForm.js",["270"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminForm.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst StaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/staff/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"staffId\", responseData.staffId);\r\n          history.replace({\r\n            pathname: \"/staff/home\",\r\n            // doctorId : responseData.doctorDetail._id\r\n          });\r\n          // console.log(responseData.message);\r\n          // console.log(responseData.doctorId);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card.Img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSpEd4pHlkPIwWbqsep-GPUHv_fWAdZvGXO1g&usqp=CAU\"\r\n        alt=\"Card image\"\r\n        height={850}\r\n      />\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>STAFF LOGIN</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StaffForm;",{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":14},{"ruleId":"275","severity":1,"message":"279","line":6,"column":16,"nodeType":"277","messageId":"278","endLine":6,"endColumn":21},{"ruleId":"275","severity":1,"message":"280","line":12,"column":19,"nodeType":"277","messageId":"278","endLine":12,"endColumn":29},{"ruleId":"275","severity":1,"message":"276","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":14},{"ruleId":"275","severity":1,"message":"279","line":6,"column":16,"nodeType":"277","messageId":"278","endLine":6,"endColumn":21},{"ruleId":"275","severity":1,"message":"280","line":12,"column":19,"nodeType":"277","messageId":"278","endLine":12,"endColumn":29},{"ruleId":"275","severity":1,"message":"281","line":8,"column":9,"nodeType":"277","messageId":"278","endLine":8,"endColumn":16},{"ruleId":"275","severity":1,"message":"276","line":8,"column":10,"nodeType":"277","messageId":"278","endLine":8,"endColumn":14},{"ruleId":"275","severity":1,"message":"279","line":8,"column":16,"nodeType":"277","messageId":"278","endLine":8,"endColumn":21},{"ruleId":"275","severity":1,"message":"281","line":8,"column":9,"nodeType":"277","messageId":"278","endLine":8,"endColumn":16},{"ruleId":"275","severity":1,"message":"282","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":7},{"ruleId":"275","severity":1,"message":"283","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":14},{"ruleId":"275","severity":1,"message":"282","line":9,"column":3,"nodeType":"277","messageId":"278","endLine":9,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":7},{"ruleId":"275","severity":1,"message":"283","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":14},{"ruleId":"275","severity":1,"message":"284","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":9},{"ruleId":"275","severity":1,"message":"285","line":19,"column":9,"nodeType":"277","messageId":"278","endLine":19,"endColumn":22},{"ruleId":"275","severity":1,"message":"286","line":23,"column":9,"nodeType":"277","messageId":"278","endLine":23,"endColumn":19},{"ruleId":"275","severity":1,"message":"287","line":28,"column":9,"nodeType":"277","messageId":"278","endLine":28,"endColumn":15},{"ruleId":"275","severity":1,"message":"288","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"289","line":11,"column":10,"nodeType":"277","messageId":"278","endLine":11,"endColumn":16},{"ruleId":"275","severity":1,"message":"290","line":11,"column":18,"nodeType":"277","messageId":"278","endLine":11,"endColumn":27},{"ruleId":"275","severity":1,"message":"282","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":7},{"ruleId":"275","severity":1,"message":"283","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":14},{"ruleId":"275","severity":1,"message":"287","line":20,"column":7,"nodeType":"277","messageId":"278","endLine":20,"endColumn":13},{"ruleId":"275","severity":1,"message":"282","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":7},{"ruleId":"275","severity":1,"message":"283","line":13,"column":3,"nodeType":"277","messageId":"278","endLine":13,"endColumn":14},{"ruleId":"275","severity":1,"message":"287","line":20,"column":7,"nodeType":"277","messageId":"278","endLine":20,"endColumn":13},{"ruleId":"275","severity":1,"message":"291","line":5,"column":9,"nodeType":"277","messageId":"278","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"284","line":5,"column":26,"nodeType":"277","messageId":"278","endLine":5,"endColumn":32},{"ruleId":"292","severity":1,"message":"293","line":24,"column":13,"nodeType":"294","endLine":24,"endColumn":140},{"ruleId":"275","severity":1,"message":"295","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":32,"column":6,"nodeType":"298","endLine":32,"endColumn":8,"suggestions":"299"},{"ruleId":"275","severity":1,"message":"300","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"301","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":44},{"ruleId":"275","severity":1,"message":"302","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":27},{"ruleId":"275","severity":1,"message":"303","line":10,"column":42,"nodeType":"277","messageId":"278","endLine":10,"endColumn":46},{"ruleId":"275","severity":1,"message":"304","line":23,"column":10,"nodeType":"277","messageId":"278","endLine":23,"endColumn":14},{"ruleId":"275","severity":1,"message":"305","line":23,"column":16,"nodeType":"277","messageId":"278","endLine":23,"endColumn":23},{"ruleId":"275","severity":1,"message":"306","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"300","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"301","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":44},{"ruleId":"275","severity":1,"message":"276","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"307","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":16},{"ruleId":"275","severity":1,"message":"308","line":7,"column":10,"nodeType":"277","messageId":"278","endLine":7,"endColumn":16},{"ruleId":"275","severity":1,"message":"309","line":11,"column":10,"nodeType":"277","messageId":"278","endLine":11,"endColumn":29},{"ruleId":"275","severity":1,"message":"284","line":14,"column":10,"nodeType":"277","messageId":"278","endLine":14,"endColumn":16},{"ruleId":"275","severity":1,"message":"281","line":8,"column":9,"nodeType":"277","messageId":"278","endLine":8,"endColumn":16},{"ruleId":"275","severity":1,"message":"282","line":10,"column":3,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":11,"column":3,"nodeType":"277","messageId":"278","endLine":11,"endColumn":7},{"ruleId":"275","severity":1,"message":"283","line":12,"column":3,"nodeType":"277","messageId":"278","endLine":12,"endColumn":14},{"ruleId":"275","severity":1,"message":"280","line":12,"column":19,"nodeType":"277","messageId":"278","endLine":12,"endColumn":29},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Group' is defined but never used.","'setIsLogin' is assigned a value but never used.","'authCtx' is assigned a value but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'logoutHandler' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'style2' is assigned a value but never used.","'classes' is defined but never used.","'mapDoc' is assigned a value but never used.","'setMapDoc' is assigned a value but never used.","'Placeholder' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'patientId'. Either include it or remove the dependency array.","ArrayExpression",["312"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'StaffMainNavigation' is defined but never used.","'Card' is defined but never used.","'file' is assigned a value but never used.","'seeFile' is assigned a value but never used.","'useState' is defined but never used.","'Worker' is defined but never used.","'Viewer' is defined but never used.","'defaultLayoutPlugin' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},"Update the dependencies array to be: [patientId]",{"range":"315","text":"316"},[973,975],"[patientId]"]