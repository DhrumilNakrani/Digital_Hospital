[{"D:\\Project Work\\Frontend\\src\\index.js":"1","D:\\Project Work\\Frontend\\src\\App.js":"2","D:\\Project Work\\Frontend\\src\\pages\\HomePage.js":"3","D:\\Project Work\\Frontend\\src\\components\\Profile\\UserProfile.js":"4","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StartingPageContent.js":"5","D:\\Project Work\\Frontend\\src\\components\\Profile\\ProfileForm.js":"6","D:\\Project Work\\Frontend\\src\\store\\auth-context.js":"7","D:\\Project Work\\Frontend\\src\\pages\\AdminPage.js":"8","D:\\Project Work\\Frontend\\src\\components\\Auth\\AdminForm.js":"9","D:\\Project Work\\Frontend\\src\\pages\\DoctorPage.js":"10","D:\\Project Work\\Frontend\\src\\pages\\PatientPage.js":"11","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js":"12","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js":"13","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminHomePage.js":"14","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js":"15","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageStaffPage.js":"16","D:\\Project Work\\Frontend\\src\\components\\Auth\\DoctorForm.js":"17","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageDoctorForm.js":"18","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js":"19","D:\\Project Work\\Frontend\\src\\components\\Auth\\PatientForm.js":"20","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageStaffForm.js":"21","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js":"22","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\AdminStarting.js":"23","D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminMainNavigation.js":"24","D:\\Project Work\\Frontend\\src\\pages\\MainNavigation.js":"25","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorAboutUs.js":"26","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorContactUs.js":"27","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientHomePage.js":"28","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorDetails.js":"29","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorHomePage.js":"30","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientContactUs.js":"31","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDetails.js":"32","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientAboutUs.js":"33","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\PatientStarting.js":"34","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\DoctorStarting.js":"35","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js":"36","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientMainNavigation.js":"37","D:\\Project Work\\Frontend\\src\\pages\\HomeAboutUs.js":"38","D:\\Project Work\\Frontend\\src\\pages\\Footer.js":"39","D:\\Project Work\\Frontend\\src\\pages\\HomeContactUs.js":"40","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDocuments.js":"41","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffHomePage.js":"42","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadPDFDocument.js":"43","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadDocument.js":"44","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffManagePatientId.js":"45","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffMainNavigation.js":"46","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StaffStarting.js":"47","D:\\Project Work\\Frontend\\src\\pages\\StaffPage.js":"48","D:\\Project Work\\Frontend\\src\\components\\Auth\\StaffForm.js":"49","D:\\Project Work\\Frontend\\src\\pages\\Patient\\SearchDoctor.js":"50","D:\\Project Work\\Frontend\\src\\pages\\Patient\\Map.js":"51","D:\\Project Work\\Frontend\\src\\pages\\Patient\\UpdateProfile.js":"52","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\UpdateDoctorProfile.js":"53","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UpdateStaffProfile.js":"54","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffDetail.js":"55"},{"size":427,"mtime":1645887432467,"results":"56","hashOfConfig":"57"},{"size":4818,"mtime":1646331474194,"results":"58","hashOfConfig":"57"},{"size":338,"mtime":1643910651488,"results":"59","hashOfConfig":"57"},{"size":278,"mtime":1620031994000,"results":"60","hashOfConfig":"57"},{"size":1846,"mtime":1645890820211,"results":"61","hashOfConfig":"57"},{"size":429,"mtime":1620031994000,"results":"62","hashOfConfig":"57"},{"size":719,"mtime":1643392031470,"results":"63","hashOfConfig":"57"},{"size":302,"mtime":1643910629629,"results":"64","hashOfConfig":"57"},{"size":5854,"mtime":1646329705722,"results":"65","hashOfConfig":"57"},{"size":321,"mtime":1643910640453,"results":"66","hashOfConfig":"57"},{"size":326,"mtime":1643910731911,"results":"67","hashOfConfig":"57"},{"size":422,"mtime":1643910490047,"results":"68","hashOfConfig":"57"},{"size":423,"mtime":1643910606617,"results":"69","hashOfConfig":"57"},{"size":381,"mtime":1645898148784,"results":"70","hashOfConfig":"57"},{"size":418,"mtime":1643910511826,"results":"71","hashOfConfig":"57"},{"size":416,"mtime":1643910616792,"results":"72","hashOfConfig":"57"},{"size":5608,"mtime":1645691863011,"results":"73","hashOfConfig":"57"},{"size":13586,"mtime":1645804328277,"results":"74","hashOfConfig":"57"},{"size":3164,"mtime":1645031722204,"results":"75","hashOfConfig":"57"},{"size":16688,"mtime":1645691716088,"results":"76","hashOfConfig":"57"},{"size":12067,"mtime":1644821429292,"results":"77","hashOfConfig":"57"},{"size":3069,"mtime":1645897911748,"results":"78","hashOfConfig":"57"},{"size":2014,"mtime":1646329985256,"results":"79","hashOfConfig":"57"},{"size":4027,"mtime":1645897709724,"results":"80","hashOfConfig":"57"},{"size":4075,"mtime":1645892680884,"results":"81","hashOfConfig":"57"},{"size":5056,"mtime":1645853898760,"results":"82","hashOfConfig":"57"},{"size":4035,"mtime":1645853948424,"results":"83","hashOfConfig":"57"},{"size":401,"mtime":1644822625335,"results":"84","hashOfConfig":"57"},{"size":11987,"mtime":1645696274481,"results":"85","hashOfConfig":"57"},{"size":391,"mtime":1644822286238,"results":"86","hashOfConfig":"57"},{"size":4040,"mtime":1645853716324,"results":"87","hashOfConfig":"57"},{"size":10260,"mtime":1645769717006,"results":"88","hashOfConfig":"57"},{"size":5063,"mtime":1645853490342,"results":"89","hashOfConfig":"57"},{"size":1470,"mtime":1645425005299,"results":"90","hashOfConfig":"57"},{"size":1467,"mtime":1645380223814,"results":"91","hashOfConfig":"57"},{"size":2431,"mtime":1646330904073,"results":"92","hashOfConfig":"57"},{"size":2731,"mtime":1646330242704,"results":"93","hashOfConfig":"57"},{"size":5407,"mtime":1645899960448,"results":"94","hashOfConfig":"57"},{"size":1644,"mtime":1644942266980,"results":"95","hashOfConfig":"57"},{"size":3983,"mtime":1645423107684,"results":"96","hashOfConfig":"57"},{"size":3422,"mtime":1645770066582,"results":"97","hashOfConfig":"57"},{"size":381,"mtime":1645375700214,"results":"98","hashOfConfig":"57"},{"size":4650,"mtime":1645895769112,"results":"99","hashOfConfig":"57"},{"size":936,"mtime":1645898892111,"results":"100","hashOfConfig":"57"},{"size":3477,"mtime":1645375814919,"results":"101","hashOfConfig":"57"},{"size":2062,"mtime":1646331314949,"results":"102","hashOfConfig":"57"},{"size":398,"mtime":1645893153954,"results":"103","hashOfConfig":"57"},{"size":316,"mtime":1645376626959,"results":"104","hashOfConfig":"57"},{"size":5882,"mtime":1646328320951,"results":"105","hashOfConfig":"57"},{"size":5714,"mtime":1646329023945,"results":"106","hashOfConfig":"57"},{"size":803,"mtime":1645890406783,"results":"107","hashOfConfig":"57"},{"size":6822,"mtime":1646330105433,"results":"108","hashOfConfig":"57"},{"size":6864,"mtime":1646332243398,"results":"109","hashOfConfig":"57"},{"size":6914,"mtime":1646332096417,"results":"110","hashOfConfig":"57"},{"size":11098,"mtime":1646331760623,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"cnbsz4",{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"114"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project Work\\Frontend\\src\\index.js",[],["243","244"],"D:\\Project Work\\Frontend\\src\\App.js",[],"D:\\Project Work\\Frontend\\src\\pages\\HomePage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Profile\\UserProfile.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StartingPageContent.js",[],"D:\\Project Work\\Frontend\\src\\components\\Profile\\ProfileForm.js",[],"D:\\Project Work\\Frontend\\src\\store\\auth-context.js",[],"D:\\Project Work\\Frontend\\src\\pages\\AdminPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\AdminForm.js",["245","246","247","248"],"import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RingLoader from \"react-spinners/RingLoader\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AdminForm.module.css\";\nimport { Form, Group, Card } from \"react-bootstrap\";\nimport AdminImage from \"../images/AdminVector.jpg\";\nconst AdminForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\n\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\n    useState(false);\n\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\n    useState(false);\n\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\n  const emailInputIsInvalidLogin =\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\n\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\n  const passwordInputIsInvalidLogin =\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\n\n  const emailInputChangeHandlerLogin = (event) => {\n    setEnteredEmailLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const emailInputBlurHandlerLogin = () => {\n    setEnteredEmailLoginTouched(true);\n  };\n\n  const passwordInputChangeHandlerLogin = (event) => {\n    setEnteredPasswordLogin(event.target.value);\n    setIsInValidCredentials(false);\n  };\n\n  const passwordInputBlurHandlerLogin = () => {\n    setEnteredPasswordLoginTouched(true);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLogin) {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(\"http://localhost:5000/admin/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email: enteredEmailLogin,\n            password: enteredPasswordLogin,\n          }),\n        });\n\n        const responseData = await response.json();\n        setIsLoading(false);\n\n        if (responseData.status === \"201\") {\n          authCtx.login(responseData.token);\n          window.sessionStorage.setItem(\"adminId\", responseData.adminId);\n          history.replace(\"/admin/home\");\n          console.log(responseData.message);\n        } else {\n          setIsInValidCredentials(true);\n          setEnteredEmailLogin(\"\");\n          setEnteredPasswordLogin(\"\");\n\n          setEnteredEmailLoginTouched(false);\n          setEnteredPasswordLoginTouched(false);\n          console.log(responseData.message);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.container}>\n        <div className={classes.imagebox}>\n          <img src={AdminImage} className=\"img-fluid\" alt=\"Phone image\" style={{ width: \"600px\" }} />\n        </div>\n        <div className={classes.loginbox}>\n          {/* <Card.Img src={AdminImage} alt=\"Card image\" height={661} /> */}\n          <Card.ImgOverlay>\n            <section className={classes.auth}>\n              <h3>ADMIN LOGIN</h3>\n\n              <form onSubmit={formSubmitHandler}>\n                {isLogin && (\n                  <div>\n                    <div className={classes.control}>\n                      <label htmlFor=\"email\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"abc@gmail.com\"\n                        required\n                        onChange={emailInputChangeHandlerLogin}\n                        onBlur={emailInputBlurHandlerLogin}\n                        value={enteredEmailLogin}\n                      />\n                      {emailInputIsInvalidLogin && (\n                        <div className=\"p-3\">\n                          <h6>Email must not be empty</h6>\n                        </div>\n                      )}\n                    </div>\n                    <div className={classes.control}>\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={passwordInputChangeHandlerLogin}\n                        onBlur={passwordInputBlurHandlerLogin}\n                        value={enteredPasswordLogin}\n                      />\n                      {passwordInputIsInvalidLogin && (\n                        <div className=\"p-3\">\n                          <h6 className=\"error\">Password must not be empty</h6>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                <div className={classes.actions}>\n                  {!isLoading && <button disabled={!formIsValid}>Login</button>}\n                  {isLoading && (\n                    <RingLoader color=\"white\" height={80} width={80}></RingLoader>\n                  )}\n                  {isLogin && isInValidCredentials && (\n                    <div className=\"p-3\">\n                      <h6 className=\"error\">Invalid credentials, could not log you in.</h6>\n                    </div>\n                  )}\n                </div>\n              </form>\n            </section>\n          </Card.ImgOverlay>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AdminForm;","D:\\Project Work\\Frontend\\src\\pages\\DoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\PatientPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteDoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageDoctorPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminDeleteStaffPage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminManageStaffPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\DoctorForm.js",["249","250","251","252","253"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./DoctorForm.module.css\";\r\nimport { Form, Group ,Card} from \"react-bootstrap\";\r\nimport DoctorImage from \"../images/DoctorVector.jpg\";\r\nconst DoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/doctor/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"doctorId\", responseData.doctorId);\r\n          history.replace({\r\n            pathname: \"/doctor/detail\",\r\n            // doctorId : responseData.doctorDetail._id\r\n          });\r\n          // console.log(responseData.message);\r\n          // console.log(responseData.doctorId);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n        <img src={DoctorImage}\r\n        className=\"img-fluid\" alt=\"Phone image\" style={{width:\"600px\"},{Height:\"500px\"}}/>\r\n      </div>\r\n      <div className={classes.loginbox}>\r\n      <Card.ImgOverlay>\r\n    <section className={classes.auth}>\r\n      <h3>DOCTOR LOGIN</h3>\r\n\r\n      <form onSubmit={formSubmitHandler}>\r\n        {isLogin && (\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"abc@gmail.com\"\r\n                required\r\n                onChange={emailInputChangeHandlerLogin}\r\n                onBlur={emailInputBlurHandlerLogin}\r\n                value={enteredEmailLogin}\r\n              />\r\n              {emailInputIsInvalidLogin && (\r\n                <div className=\"p-3\">\r\n                  <h6>Email must not be empty</h6>\r\n               </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                onChange={passwordInputChangeHandlerLogin}\r\n                onBlur={passwordInputBlurHandlerLogin}\r\n                value={enteredPasswordLogin}\r\n              />\r\n              {passwordInputIsInvalidLogin && \r\n              <div className=\"p-3\">\r\n              <h6>Password must not be empty</h6>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.actions}>\r\n          {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n          {isLoading && (\r\n            <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n          )}\r\n          {isLogin && isInValidCredentials && (\r\n            <div className=\"p-3\">\r\n              <h6>Invalid credentials, could not log you in.</h6>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </section>\r\n    </Card.ImgOverlay>\r\n    </div>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorForm;","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageDoctorForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteDoctorForm.js",["254"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteDoctorForm.module.css\";\r\n\r\nconst AdminDeleteDoctorForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist , setIsNotExist] = useState(false);\r\n\r\n  const [enteredDoctorId, setEnteredDoctorId] = useState(\"\");\r\n  const [enteredDoctorIdTouched, setEnteredDoctorIdTouched] = useState(false);\r\n\r\n  const enteredDoctorIdIsValid = enteredDoctorId.trim() !== \"\";\r\n  const doctorIdInputIsInValid =\r\n    !enteredDoctorIdIsValid && enteredDoctorIdTouched;\r\n\r\n  const doctorIdInputChangeHandler = (event) => {\r\n    setEnteredDoctorId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const doctorIdInputBlurHandler = (event) => {\r\n    setEnteredDoctorIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredDoctorIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"Doctor Deleted Successfully\");\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\"http://localhost:5000/doctor/delete\", {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id : enteredDoctorId\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"200\") {\r\n          // authCtx.login(responseData.token);\r\n          history.replace(\"/\");\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsNotExist(true);\r\n          history.replace(\"/admin/delete-doctor\");\r\n          console.log(responseData.message);\r\n        }\r\n      }catch (err) {\r\n        console.log({err});\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n    <section className={classes.auth}>\r\n      <h3>Delete Doctor</h3>\r\n      \r\n      <form onSubmit={formSubmitHandler}>\r\n        <div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"text\">Doctor ID</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"id\"\r\n              placeholder=\"Enter Doctor ID\"\r\n              required\r\n              onChange={doctorIdInputChangeHandler}\r\n              onBlur={doctorIdInputBlurHandler}\r\n              value={enteredDoctorId}\r\n            />\r\n            {doctorIdInputIsInValid && <h6>Doctor ID must not be empty</h6>}\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button disabled={!formIsValid}>Delete</button>\r\n            {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && <h6>Doctor does not exist</h6>}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </section>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default AdminDeleteDoctorForm;","D:\\Project Work\\Frontend\\src\\components\\Auth\\PatientForm.js",["255","256","257"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport PatientImage from \"../images/PatientVector.jpg\"; \r\n//import classes from \"./AdminForm.module.css\";\r\nimport classes from \"./PatientForm.module.css\";\r\nimport { Form, Group, Card } from \"react-bootstrap\";\r\nconst PatientForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n  const [isExsistingUser, setIsExsistingUser] = useState(false);\r\n  const [isPasswordInValid, setIsPasswordInValid] = useState(false);\r\n\r\n  const [enteredFirstName, setEnteredFirstName] = useState(\"\");\r\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\r\n\r\n  const [enteredLastName, setEnteredLastName] = useState(\"\");\r\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\r\n  const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false);\r\n\r\n  const [enteredConfirmPassword, setEnteredConfirmPassword] = useState(\"\");\r\n  const [enteredConfirmPasswordTouched, setEnteredConfirmPasswordTouched] =\r\n    useState(false);\r\n\r\n  const [enteredMobileNumber, setEnteredMobileNumber] = useState(\"\");\r\n  const [enteredMobileNumberTouched, setEnteredMobileNumberTouched] =\r\n    useState(false);\r\n\r\n  const enteredFirstNameIsValid = enteredFirstName.trim() !== \"\";\r\n  const firstNameInputIsInValid =\r\n    !enteredFirstNameIsValid && enteredFirstNameTouched;\r\n\r\n  const enteredLastNameIsValid = enteredLastName.trim() !== \"\";\r\n  const lastNameInputIsInValid =\r\n    !enteredLastNameIsValid && enteredLastNameTouched;\r\n\r\n  const enteredEmailIsValid = enteredEmail.trim() !== \"\";\r\n  const emailInputIsInValid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const enteredPasswordIsValid = enteredPassword.trim() !== \"\";\r\n  const passwordInputIsInValid =\r\n    !enteredPasswordIsValid && enteredPasswordTouched;\r\n\r\n  const enteredConfirmPasswordIsValid = enteredConfirmPassword.trim() !== \"\";\r\n  const ConfirmPasswordInputIsInValid =\r\n    !enteredConfirmPasswordIsValid && enteredConfirmPasswordTouched;\r\n\r\n  const enteredMobileNumberIsValid = enteredMobileNumber.trim() !== \"\";\r\n  const mobileNumberInputIsInValid =\r\n    !enteredMobileNumberIsValid && enteredMobileNumberTouched;\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const firstNameInputChangeHandler = (event) => {\r\n    setEnteredFirstName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const firstNameInputBlurHandler = (event) => {\r\n    setEnteredFirstNameTouched(true);\r\n  };\r\n\r\n  const lastNameInputChangeHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const lastNameInputBlurHandler = (event) => {\r\n    setEnteredLastNameTouched(true);\r\n  };\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const emailInputBlurHandler = (event) => {\r\n    setEnteredEmailTouched(true);\r\n  };\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandler = (event) => {\r\n    setEnteredPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const passwordInputBlurHandler = (event) => {\r\n    setEnteredPasswordTouched(true);\r\n  };\r\n\r\n  const confirmPasswordInputChangeHandler = (event) => {\r\n    setEnteredConfirmPassword(event.target.value);\r\n    setIsExsistingUser(false);\r\n    setIsPasswordInValid(false);\r\n  };\r\n\r\n  const confirmPasswordInputBlurHandler = (event) => {\r\n    setEnteredConfirmPasswordTouched(true);\r\n  };\r\n\r\n  const mobileNumberInputChangeHandler = (event) => {\r\n    setEnteredMobileNumber(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const mobileNumberInputBlurHandler = (event) => {\r\n    setEnteredMobileNumberTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n  if (\r\n    enteredEmailIsValid &&\r\n    enteredFirstNameIsValid &&\r\n    enteredLastNameIsValid &&\r\n    enteredPasswordIsValid &&\r\n    enteredConfirmPasswordIsValid &&\r\n    enteredMobileNumberIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n          history.replace(\"/patient/detail\");\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetch(\"http://localhost:5000/signup\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: enteredFirstName,\r\n            lastName: enteredLastName,\r\n            email: enteredEmail,\r\n            mobileNumber: enteredMobileNumber,\r\n            password: enteredPassword,\r\n            confirmPassword: enteredConfirmPassword,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (\r\n          responseData.status !== \"422\" &&\r\n          enteredPassword === enteredConfirmPassword\r\n        ) {\r\n          authCtx.login(responseData.token);\r\n          //window.sessionStorage.setItem(\"userId\", responseData.userId);\r\n          window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n          history.replace(\"/patient/detail\");\r\n          console.log(responseData.message);\r\n        } else if (enteredPassword !== enteredConfirmPassword) {\r\n          setIsPasswordInValid(true);\r\n          console.log(responseData.message);\r\n        } else {\r\n          setIsExsistingUser(true);\r\n          setEnteredEmail(\"\");\r\n          setEnteredFirstName(\"\");\r\n          setEnteredLastName(\"\");\r\n          setEnteredMobileNumber(\"\");\r\n          setEnteredPassword(\"\");\r\n          setEnteredConfirmPassword(\"\");\r\n\r\n          setEnteredConfirmPasswordTouched(false);\r\n          setEnteredPasswordTouched(false);\r\n          setEnteredEmailTouched(false);\r\n          setEnteredFirstNameTouched(false);\r\n          setEnteredLastNameTouched(false);\r\n          setEnteredMobileNumberTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n        <img src={PatientImage} className=\"img-fluid\" alt=\"Phone image\" style={{width:\"600px\"}}/>\r\n      </div>\r\n      <div className={classes.loginbox}>\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>{isLogin ? \"PATIENT LOGIN\" : \"SIGN UP\"}</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {!isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"fname\"\r\n                    placeholder=\"First Name\"\r\n                    required\r\n                    onChange={firstNameInputChangeHandler}\r\n                    onBlur={firstNameInputBlurHandler}\r\n                    value={enteredFirstName}\r\n                  />\r\n                  {firstNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>First Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"lname\"\r\n                    placeholder=\"Last Name\"\r\n                    required\r\n                    onChange={lastNameInputChangeHandler}\r\n                    onBlur={lastNameInputBlurHandler}\r\n                    value={enteredLastName}\r\n                  />\r\n                  {lastNameInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Last Name must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    id=\"email\"\r\n                    required\r\n                    onChange={emailInputChangeHandler}\r\n                    onBlur={emailInputBlurHandler}\r\n                    value={enteredEmail}\r\n                  />\r\n                  {emailInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"text\">Mobile Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"number\"\r\n                    placeholder=\"10 digit mobile number\"\r\n                    pattern=\"[0-9]{10}\"\r\n                    required\r\n                    onChange={mobileNumberInputChangeHandler}\r\n                    onBlur={mobileNumberInputBlurHandler}\r\n                    value={enteredMobileNumber}\r\n                  />\r\n                  {mobileNumberInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Mobile Number must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={passwordInputChangeHandler}\r\n                    onBlur={passwordInputBlurHandler}\r\n                    value={enteredPassword}\r\n                  />\r\n                  {passwordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"cpassword\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    onChange={confirmPasswordInputChangeHandler}\r\n                    onBlur={confirmPasswordInputBlurHandler}\r\n                    value={enteredConfirmPassword}\r\n                  />\r\n                  {ConfirmPasswordInputIsInValid && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Confirm Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && (\r\n                <button disabled={!formIsValid}>\r\n                  {isLogin ? \"Login\" : \"Create Account\"}\r\n                </button>\r\n              )}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isExsistingUser && (\r\n                <div className=\"p-3\">\r\n                  <h6>User exists already, please login instead.</h6>\r\n                </div>\r\n              )}\r\n              {!isLogin && isPasswordInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Password and Confirm Password must be same.</h6>\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                className={classes.toggle}\r\n                onClick={switchAuthModeHandler}\r\n              >\r\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n      </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientForm;","D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminManageStaffForm.js",[],"D:\\Project Work\\Frontend\\src\\components\\Admin\\AdminDeleteStaffForm.js",["258"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./AdminDeleteStaffForm.module.css\";\r\n\r\nconst AdminDeleteStaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist , setIsNotExist] = useState(false);\r\n\r\n  const [enteredStaffId, setEnteredStaffId] = useState(\"\");\r\n  const [enteredStaffIdTouched, setEnteredStaffIdTouched] = useState(false);\r\n\r\n  const enteredStaffIdIsValid = enteredStaffId.trim() !== \"\";\r\n  const staffIdInputIsInValid = !enteredStaffIdIsValid && enteredStaffIdTouched;\r\n\r\n  const doctorIdInputChangeHandler = (event) => {\r\n    setEnteredStaffId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const doctorIdInputBlurHandler = (event) => {\r\n    setEnteredStaffIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredStaffIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/staff/delete\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredStaffId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"200\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/admin/delete-staff\");\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Delete Staff</h3>\r\n\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Staff ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter Staff ID\"\r\n                required\r\n                onChange={doctorIdInputChangeHandler}\r\n                onBlur={doctorIdInputBlurHandler}\r\n                value={enteredStaffId}\r\n              />\r\n              {staffIdInputIsInValid && <h6>Staff ID must not be empty</h6>}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Delete</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && <h6>Staff does not exist</h6>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDeleteStaffForm;","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\AdminStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Admin\\AdminMainNavigation.js",["259","260","261"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./AdminMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst AdminMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const style = {\r\n    color: 'white',\r\n    fontSize: 16\r\n  };\r\n  return (\r\n    // <React.Fragment>\r\n    //   <header\r\n    //     className={`${classes.header} ${classes.brown} ${classes.highlightTextOut}`}\r\n    //   >\r\n    //     <NavLink to=\"/admin/home\">\r\n    //       <div className={classes.logo}>Welcome Admin</div>\r\n    //     </NavLink>\r\n    //     <ul>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-doctor\"\r\n    //           alt=\"ADD DOCTOR\"\r\n    //         >\r\n    //           ADD DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/add-staff\"\r\n    //           alt=\"ADD STAFF\"\r\n    //         >\r\n    //           ADD STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-doctor\"\r\n    //           alt=\"DELETE DOCTOR\"\r\n    //         >\r\n    //           DELETE DOCTOR\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       <li>\r\n    //         <NavLink\r\n    //           activeClassName={classes.active}\r\n    //           to=\"/admin/delete-staff\"\r\n    //           alt=\"DELETE STAFF\"\r\n    //         >\r\n    //           DELETE STAFF\r\n    //         </NavLink>\r\n    //       </li>\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <Button\r\n    //             variant=\"outline-info\"\r\n    //             onClick={logoutHandler}\r\n    //             alt=\"LOGOUT\"\r\n    //           >\r\n    //             LOGOUT\r\n    //           </Button>\r\n    //         </li>\r\n    //       )}\r\n    //     </ul>\r\n    //   </header>\r\n    // </React.Fragment>\r\n\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/admin/home\" activeClassName={classes.adminborder}>\r\n            Welcome Admin\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/add-doctor\" style={style}\r\n            >\r\n              ADD DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/add-staff\" style={style}\r\n            >\r\n              ADD STAFF\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/delete-doctor\" style={style}\r\n            >\r\n              DELETE DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/delete-staff\" style={style}\r\n            >\r\n              DELETE STAFF\r\n            </Nav.Link>\r\n          </Nav>\r\n          {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\" style={style}\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminMainNavigation;","D:\\Project Work\\Frontend\\src\\pages\\MainNavigation.js",["262","263","264","265","266","267","268"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nimport AuthContext from \"../store/auth-context\";\r\nimport {GiHospitalCross} from \"react-icons/gi\"\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst MainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const style1 = {\r\n    color: \"white\",\r\n    fontSize: 16\r\n  };\r\n  const style2 = {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n  };\r\n\r\n  return (\r\n    // <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    // <header className={ `${classes.brown} ${classes.highlightTextOut}`}>\r\n    //   <NavLink to=\"/\">\r\n    //     <div className={classes.logo}>Work in Progress</div>\r\n    //   </NavLink>\r\n    //   <nav>\r\n    //     <ul>\r\n    //       {!isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"ADMIN\"to=\"/admin/login\">\r\n    //             ADMIN\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {!isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"PATIENT LOGIN\"to=\"/patient/login\">\r\n    //             PATIENT LOGIN\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {!isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"DOCTOR LOGIN\"to=\"/doctor/login\">\r\n    //             DOCTOR LOGIN\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <NavLink activeClassName={classes.active} alt=\"PROFILE\" to=\"/profile\">\r\n    //             PROFILE\r\n    //           </NavLink>\r\n    //         </li>\r\n    //       )}\r\n\r\n    //       {isLoggedIn && (\r\n    //         <li>\r\n    //           <button className={classes.active} onClick={logoutHandler} alt=\"LOGOUT\">LOGOUT</button>\r\n    //         </li>\r\n    //       )}\r\n    //     </ul>\r\n    //   </nav>\r\n    // </header>\r\n    // </nav>\r\n    //\r\n\r\n    <React.Fragment>\r\n      <Navbar bg=\"p-3 bg-dark text-white\" sticky=\"top\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/\" style={style2}>\r\n            Digital Hospital\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/admin/login\"\r\n              style={style1}\r\n            >\r\n              ADMIN\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/login\"\r\n              style={style1}\r\n            >\r\n              PATIENT\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/doctor/login\"\r\n              style={style1}\r\n            >\r\n              DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/login\"\r\n              style={style1}\r\n            >\r\n              STAFF\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/about\"\r\n              style={style1}\r\n            >\r\n              ABOUT US\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/contact\"\r\n              style={style1}\r\n            >\r\n              CONTACT US\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorAboutUs.js",["269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React from \"react\";\r\nimport DoctorMainNavigation from \"./DoctorMainNavigation\";\r\nimport Footer from \"../Footer\";\r\nimport './DoctorAboutUs.css';\r\n\r\nconst DoctorAboutUs = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <DoctorMainNavigation></DoctorMainNavigation>\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"title\">\r\n            <h1>About Us</h1>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"article\">\r\n              <h4>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam lacinia luctus ullamcorper. Mauris tincidunt ex sit amet leo eleifend, in venenatis elit efficitur. Ut at mi sit amet nunc ultrices mattis vel sed mi. Donec fermentum vulputate tellus imperdiet fringilla. Nam ac ligula tincidunt, egestas odio vel, vulputate dolor. Donec non nibh mollis, tincidunt ligula non, pulvinar ipsum. Nullam tempus dolor tellus, id consectetur nunc vulputate in. Donec venenatis, magna at eleifend eleifend, turpis libero malesuada dui, sed semper diam justo vitae ante. Phasellus euismod justo tortor, a tempus nunc faucibus imperdiet.\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-section\">\r\n            <img src=\"https://st2.depositphotos.com/3591429/5997/i/600/depositphotos_59977559-stock-photo-hands-holding-word-about-us.jpg\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n\r\n<div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-sm-8 col-lg-6\">\r\n            <div className=\"section_heading text-center wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <h3>Our Creative <span> Team</span></h3>\r\n              <p>Appland is completely creative, lightweight, clean &amp; super responsive app landing page.</p>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Samantha Sarah</h6>\r\n                <p className=\"designation\">Founder &amp; CEO</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Nazrul Islam</h6>\r\n                <p className=\"designation\">UI Designer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Riyadh Khan</h6>\r\n                <p className=\"designation\">Developer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.5s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar2.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Niloy Islam</h6>\r\n                <p className=\"designation\">Marketing Manager</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorAboutUs;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorDetails.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDetails.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientAboutUs.js",["282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React from \"react\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport './PatientAboutUs.css';\r\nimport Footer from \"../Footer\";\r\n\r\nconst PatientAboutUs = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"title\">\r\n            <h1>About Us</h1>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"article\">\r\n              <h4>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam lacinia luctus ullamcorper. Mauris tincidunt ex sit amet leo eleifend, in venenatis elit efficitur. Ut at mi sit amet nunc ultrices mattis vel sed mi. Donec fermentum vulputate tellus imperdiet fringilla. Nam ac ligula tincidunt, egestas odio vel, vulputate dolor. Donec non nibh mollis, tincidunt ligula non, pulvinar ipsum. Nullam tempus dolor tellus, id consectetur nunc vulputate in. Donec venenatis, magna at eleifend eleifend, turpis libero malesuada dui, sed semper diam justo vitae ante. Phasellus euismod justo tortor, a tempus nunc faucibus imperdiet.\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-section\">\r\n            <img src=\"https://st2.depositphotos.com/3591429/5997/i/600/depositphotos_59977559-stock-photo-hands-holding-word-about-us.jpg\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n\r\n<div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-sm-8 col-lg-6\">\r\n            <div className=\"section_heading text-center wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <h3>Our Creative <span> Team</span></h3>\r\n              <p>Appland is completely creative, lightweight, clean &amp; super responsive app landing page.</p>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Samantha Sarah</h6>\r\n                <p className=\"designation\">Founder &amp; CEO</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Nazrul Islam</h6>\r\n                <p className=\"designation\">UI Designer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Riyadh Khan</h6>\r\n                <p className=\"designation\">Developer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.5s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar2.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Niloy Islam</h6>\r\n                <p className=\"designation\">Marketing Manager</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientAboutUs;","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\PatientStarting.js",[],"D:\\Project Work\\Frontend\\src\\components\\StartingPage\\DoctorStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Doctor\\DoctorMainNavigation.js",["295","296","297","298"],"import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./DoctorMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst style1 = {\r\n  color: \"white\",\r\n  fontSize: 16,\r\n};\r\nconst style2 = {\r\n  color: \"pink\",\r\n  fontSize: 20,\r\n};\r\nconst DoctorMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    window.sessionStorage.removeItem(\"doctorId\");\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg=\"p-3 bg-dark text-white\" sticky=\"top\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/doctor/home\" style={style1}>\r\n            Welcome Doctor\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/doctor/detail\"\r\n              style={style1}\r\n            >\r\n              DETAILS\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/doctor/update-profile\"\r\n              style={style1}\r\n            >\r\n              UPDATE PROFILE\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/doctor/contact\"\r\n              style={style1}\r\n            >\r\n              CONTACT\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/doctor/about\"\r\n              style={style1}\r\n            >\r\n              ABOUT US\r\n            </Nav.Link>\r\n            {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\"\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorMainNavigation;","D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientMainNavigation.js",["299","300","301","302"],"import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./PatientMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nconst style1 = {\r\n  color: \"white\",\r\n  fontSize: 16,\r\n};\r\nconst style2 = {\r\n  color: \"pink\",\r\n  fontSize: 20,\r\n};\r\nconst PatientMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    window.sessionStorage.removeItem(\"patientId\");\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg=\"p-3 bg-dark text-white\" sticky=\"top\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/patient/home\" style={style1}>\r\n            Welcome Patient\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/detail\"\r\n              style={style1}\r\n            >\r\n              DETAILS\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/search-doctor\"\r\n              style={style1}\r\n            >\r\n              SEARCH DOCTOR\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/update-profile\"\r\n              style={style1}\r\n            >\r\n              UPDATE PROFILE\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/contact\"\r\n              style={style1}\r\n            >\r\n              CONTACT\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/patient/about\"\r\n              style={style1}\r\n            >\r\n              ABOUT US\r\n            </Nav.Link>\r\n            {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\"\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientMainNavigation;","D:\\Project Work\\Frontend\\src\\pages\\HomeAboutUs.js",["303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React from \"react\";\r\n//import PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport './HomeAboutUs.css';\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport {Placeholder,Card,Button} from 'react-bootstrap';\r\nimport Footer from './Footer';\r\nconst HomeAboutUs = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <MainNavigation></MainNavigation>\r\n      <div className=\"background2\">\r\n      <div className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"title\">\r\n            <h1>About Us</h1>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"article\">\r\n              <h4 style={{color:\"white\" , fontFamily:\"times-new-roman\"}}>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam lacinia luctus ullamcorper. Mauris tincidunt ex sit amet leo eleifend, in venenatis elit efficitur. Ut at mi sit amet nunc ultrices mattis vel sed mi. Donec fermentum vulputate tellus imperdiet fringilla. Nam ac ligula tincidunt, egestas odio vel, vulputate dolor. Donec non nibh mollis, tincidunt ligula non, pulvinar ipsum. Nullam tempus dolor tellus, id consectetur nunc vulputate in. Donec venenatis, magna at eleifend eleifend, turpis libero malesuada dui, sed semper diam justo vitae ante. Phasellus euismod justo tortor, a tempus nunc faucibus imperdiet.\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"image-section\">\r\n            <img src=\"https://st2.depositphotos.com/3591429/5997/i/600/depositphotos_59977559-stock-photo-hands-holding-word-about-us.jpg\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n\r\n<div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-sm-8 col-lg-6\">\r\n            <div className=\"section_heading text-center wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <h3 style={{color:\"white\" , fontFamily:\"times-new-roman\",borderBottom:\"5px solid #c4d156\", display:\"inline-block\",borderRadius:\"25px\"}}>Our Creative <span> Team</span></h3>\r\n              <p style={{color:\"white\"}}>Appland is completely creative, lightweight, clean &amp; super responsive app landing page.</p>\r\n              <div className=\"line\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.2s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Samantha Sarah</h6>\r\n                <p className=\"designation\">Founder &amp; CEO</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.3s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar7.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Nazrul Islam</h6>\r\n                <p className=\"designation\">UI Designer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar6.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Riyadh Khan</h6>\r\n                <p className=\"designation\">Developer</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-2 col-lg-3\">\r\n            <div className=\"single_advisor_profile wow fadeInUp\" data-wow-delay=\"0.5s\">\r\n              <div className=\"advisor_thumb\"><img src=\"https://bootdey.com/img/Content/avatar/avatar2.png\" alt=\"\"/>\r\n                <div className=\"social-info\"><a href=\"#\"><i className=\"fa fa-facebook\"></i></a><a href=\"#\"><i className=\"fa fa-twitter\"></i></a><a href=\"#\"><i className=\"fa fa-linkedin\"></i></a></div>\r\n              </div>\r\n              <div className=\"single_advisor_details_info\">\r\n                <h6>Niloy Islam</h6>\r\n                <p className=\"designation\">Marketing Manager</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeAboutUs;","D:\\Project Work\\Frontend\\src\\pages\\Footer.js",[],"D:\\Project Work\\Frontend\\src\\pages\\HomeContactUs.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\PatientDocuments.js",["319","320","321"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Table } from 'react-bootstrap';\r\nimport { GrDocumentPdf } from 'react-icons/gr';\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nconst PatientDocuments = (props) => {\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  const patientId = window.sessionStorage.getItem(\"patientId\");\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/detail/${patientId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const patientDoc = {\r\n          doc: responseData.patient.documents,\r\n        };\r\n        // console.log(responseData.patient);\r\n        // const doc = responseData.patient.documents[0].patientDoc;\r\n        // console.log(patientDoc.doc);\r\n        setDocuments(patientDoc.doc);\r\n\r\n        // console.log();\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const displayPatientDoc = (e, index) => {\r\n    console.log(index);\r\n    fetch(`http://localhost:5000/documents/${patientId}/${index}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/pdf\",\r\n      },\r\n    })\r\n      .then((res) => res.blob())\r\n      .then((response) => {\r\n        //Create a Blob from the PDF Stream\r\n        console.log(\"Helloo\");\r\n        console.log(response);\r\n        const file = new Blob([response], {\r\n          type: \"application/pdf\",\r\n        });\r\n        //Build a URL from the file\r\n        const fileURL = URL.createObjectURL(file);\r\n        //Open the URL on new Window\r\n        window.open(fileURL);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //   console.log(patientId);\r\n  //   const url = `documents/${patientId}`;\r\n  //   console.log(url);\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row text-center\">\r\n          {\r\n            documents.map((doc, index) => {\r\n              return (\r\n\r\n                <div className=\"col-10 col-md-3 mt-5\">\r\n                  <div className=\"card p-2\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"ml-3 w-100\">\r\n                        <h4 className=\"mb-0 mt-0 textLeft\">{doc.patientDoc.split(\"-\")[1]}\r\n                        </h4> <br></br><span className=\"textLeft\"><GrDocumentPdf size={40}></GrDocumentPdf></span>\r\n                        <div className=\"p-2 mt-2 d-flex justify-content-between rounded text-white stats\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <NavLink\r\n                    to=\"/patient/document\"\r\n                    onClick={(e) => displayPatientDoc(e, index)}\r\n                    key={doc.patientDoc}\r\n                  >\r\n                    <button type=\"button\" href={doc.patientDoc} className=\"btn btn-info btn-lg mx-2\">Open Document</button>\r\n                  </NavLink>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PatientDocuments;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffHomePage.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadPDFDocument.js",["322","323","324","325","326","327"],"import { React, useState, useEffect, useRef } from \"react\";\r\nimport StaffMainNavigation from \"./StaffMainNavigation\";\r\nimport classes from \"./UploadPDFDocument.module.css\";\r\nimport { Worker } from \"@react-pdf-viewer/core\";\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\nimport axios from \"axios\";\r\nimport { defaultLayoutPlugin } from \"@react-pdf-viewer/default-layout\";\r\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\r\nimport { Button, Nav, Navbar, Container, Card } from \"react-bootstrap\";\r\n//import DocumentImage from \"../../components/images/documentImage.jpg\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UploadPDFDocument = () => {\r\n  const history = useHistory();\r\n  const defaultLayoutPluginInstance = defaultLayoutPlugin();\r\n\r\n  const patientId = localStorage.getItem(\"patientId\");\r\n  // console.log(patientId);\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [uploadFile, setUploadFile] = useState(null);\r\n  const [file, seeFile] = useState(null);\r\n  const [pdfError, setPdfError] = useState(\"\");\r\n\r\n  const uploadHandler = async (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"Hellog\");\r\n\r\n    // formData.append(\"patient\", patientId);\r\n    // console.log(pdfFile);\r\n    // console.log( \"http://localhost:5000/upload/document/\"+patientId);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", uploadFile); //image\r\n    formData.append(\"patient\", patientId);\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const url = \"http://localhost:5000/upload/document\";\r\n\r\n    axios\r\n      .post(url, formData, config)\r\n      .then((response) => {\r\n        alert(\"File Uploaded Successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    history.replace(\"/staff/home\");\r\n  };\r\n\r\n  const handleFile = (e) => {\r\n    setUploadFile(e.target.files[0]);\r\n    let selectedFile = e.target.files[0];\r\n    // console.log(selectedFile.type);\r\n    if (selectedFile) {\r\n      if (selectedFile) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(selectedFile);\r\n        reader.onloadend = (e) => {\r\n          setPdfError(\"\");\r\n          setPdfFile(e.target.result);\r\n        };\r\n      } else {\r\n        setPdfError(\"Not a valid pdf: Please select only PDF\");\r\n        setPdfFile(\"\");\r\n      }\r\n    } else {\r\n      console.log(\"please select a PDF\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\" >\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/staff/home\">\r\n            Welcome Staff\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              style={{fontSize: 16}}\r\n              to=\"/staff/upload-patient-document\"\r\n            >\r\n              UPLOAD PATIENT DOCUMENT\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      <div style={{background:\"linear-gradient(#181717e5 0%, #2162d1ad 100%)\" ,display:\"flex\",minHeight:\"673px\"}}>\r\n        <div className=\"container\">\r\n          <form className={classes.auth}>\r\n            <label>\r\n              <h5 className={classes.textcolors}>Upload PDF</h5>\r\n            </label>\r\n            <br></br>\r\n\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              onChange={handleFile}\r\n            ></input>\r\n\r\n            {pdfError && <span className=\"text-danger\">{pdfError}</span>}\r\n          </form>\r\n          <div className={classes.center}>\r\n            {!pdfFile && (\r\n              <Button disabled variant=\"info\">\r\n                UPLOAD\r\n              </Button>\r\n            )}\r\n            {pdfFile && (\r\n              <Button onClick={uploadHandler} variant=\"info\">\r\n                UPLOAD\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <h5 className={classes.textcolors}>View PDF</h5>\r\n          <div className=\"viewer\">\r\n            {pdfFile && (\r\n              <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.12.313/build/pdf.worker.min.js\">\r\n                <Viewer\r\n                  fileUrl={pdfFile}\r\n                  plugins={[defaultLayoutPluginInstance]}\r\n                ></Viewer>\r\n              </Worker>\r\n            )}\r\n\r\n            {!pdfFile && <h5 className={classes.textcolors}>No file is selected yet</h5>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadPDFDocument;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\UploadDocument.js",["328","329","330","331","332","333","334","335"],"import { React, useState, useEffect, useRef } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport StaffMainNavigation from \"./StaffMainNavigation\";\r\nimport \"./UploadDocument.module.css\";\r\nimport { Worker } from \"@react-pdf-viewer/core\";\r\n// Import the main Viewer component\r\nimport { Viewer } from \"@react-pdf-viewer/core\";\r\n// Import the styles\r\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\r\n// default layout plugin\r\nimport { defaultLayoutPlugin } from \"@react-pdf-viewer/default-layout\";\r\n// Import styles of default layout plugin\r\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport StaffManagePatientId from \"./StaffManagePatientId\";\r\nconst UploadDocument = () => {\r\n  return (\r\n    <div>\r\n      <StaffMainNavigation></StaffMainNavigation>\r\n      <StaffManagePatientId></StaffManagePatientId>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadDocument;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffManagePatientId.js",["336"],"import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./StaffManagePatientId.module.css\";\r\n\r\nconst StaffManagePatientId = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isNotExist, setIsNotExist] = useState(false);\r\n\r\n  const [enteredPatientId, setEnteredPatientId] = useState(\"\");\r\n  const [enteredPatientIdTouched, setEnteredPatientIdTouched] = useState(false);\r\n\r\n  const enteredPatientIdIsValid = enteredPatientId.trim() !== \"\";\r\n  const patientIdInputIsInValid = !enteredPatientIdIsValid && enteredPatientIdTouched;\r\n\r\n  const patientIdInputChangeHandler = (event) => {\r\n    setEnteredPatientId(event.target.value);\r\n    setIsNotExist(false);\r\n  };\r\n\r\n  const patientIdInputBlurHandler = (event) => {\r\n    setEnteredPatientIdTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredPatientIdIsValid) {\r\n    formIsValid = true;\r\n  }\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/find/patient\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: enteredPatientId,\r\n        }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n\r\n      if (responseData.status === \"201\") {\r\n        // authCtx.login(responseData.token);\r\n        history.replace(\"/staff/upload-patient-document\");\r\n        // console.log(responseData.message);\r\n\r\n        // console.log(responseData.patientId);\r\n        localStorage.setItem(\"patientId\",responseData.patientId);\r\n      } else {\r\n        setIsNotExist(true);\r\n        history.replace(\"/staff/manage-patient-id\");\r\n        console.log(responseData.message);\r\n        \r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.image}>\r\n      <section className={classes.auth}>\r\n        <h3>Search Patient</h3>\r\n        <form onSubmit={formSubmitHandler}>\r\n          <div>\r\n            <div className={classes.control}>\r\n              <label htmlFor=\"text\">Patient ID</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id\"\r\n                placeholder=\"Enter patient ID\"\r\n                required\r\n                onChange={patientIdInputChangeHandler}\r\n                onBlur={patientIdInputBlurHandler}\r\n                value={enteredPatientId}\r\n              />\r\n              {patientIdInputIsInValid && (\r\n                <div className=\"p-3\">\r\n                  <h6>Patient ID must not be empty</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className={classes.actions}>\r\n              <button disabled={!formIsValid}>Search</button>\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isNotExist && (\r\n                <div className=\"p-3\">\r\n                  <h6>Patient does not exist</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffManagePatientId;","D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffMainNavigation.js",["337","338","339"],"import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport classes from \"./StaffMainNavigation.module.css\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Form,\r\n  FormControl,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\nconst StaffMainNavigation = () => {\r\n  const history = useHistory();\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const logoutHandler = () => {\r\n    window.sessionStorage.removeItem(\"staffId\");\r\n    authCtx.logout();\r\n    history.replace(\"/\");\r\n  };\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\" sticky=\"top\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand as={NavLink} to=\"/staff/home\" activeClassName={classes.staffborder}>\r\n            Welcome Staff\r\n          </Navbar.Brand>\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/manage-patient-id\"\r\n              style={{fontSize: 16}}\r\n            >\r\n              UPLOAD PATIENT DOCUMENT\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/detail\"\r\n            >\r\n              DETAILS\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={NavLink}\r\n              activeClassName={classes.active}\r\n              to=\"/staff/update-profile\"\r\n            >\r\n              UPDATE PROFILE\r\n            </Nav.Link>\r\n          </Nav>\r\n          {isLoggedIn && (\r\n            <li>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                onClick={logoutHandler}\r\n                alt=\"LOGOUT\"\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </li>\r\n          )}\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StaffMainNavigation;","D:\\Project Work\\Frontend\\src\\components\\StartingPage\\StaffStarting.js",[],"D:\\Project Work\\Frontend\\src\\pages\\StaffPage.js",[],"D:\\Project Work\\Frontend\\src\\components\\Auth\\StaffForm.js",["340","341"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./StaffForm.module.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport StaffImage from \"../images/StaffVector.jpg\"; \r\n\r\nconst StaffForm = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInValidCredentials, setIsInValidCredentials] = useState(false);\r\n  const [enteredEmailLogin, setEnteredEmailLogin] = useState(\"\");\r\n  const [enteredEmailLoginTouched, setEnteredEmailLoginTouched] =\r\n    useState(false);\r\n\r\n  const [enteredPasswordLogin, setEnteredPasswordLogin] = useState(\"\");\r\n  const [enteredPasswordLoginTouched, setEnteredPasswordLoginTouched] =\r\n    useState(false);\r\n\r\n  const enteredEmailIsValidLogin = enteredEmailLogin.trim() !== \"\";\r\n  const emailInputIsInvalidLogin =\r\n    !enteredEmailIsValidLogin && enteredEmailLoginTouched;\r\n\r\n  const enteredPasswordIsValidLogin = enteredPasswordLogin.trim() !== \"\";\r\n  const passwordInputIsInvalidLogin =\r\n    !enteredPasswordIsValidLogin && enteredPasswordLoginTouched;\r\n\r\n  const emailInputChangeHandlerLogin = (event) => {\r\n    setEnteredEmailLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const emailInputBlurHandlerLogin = () => {\r\n    setEnteredEmailLoginTouched(true);\r\n  };\r\n\r\n  const passwordInputChangeHandlerLogin = (event) => {\r\n    setEnteredPasswordLogin(event.target.value);\r\n    setIsInValidCredentials(false);\r\n  };\r\n\r\n  const passwordInputBlurHandlerLogin = () => {\r\n    setEnteredPasswordLoginTouched(true);\r\n  };\r\n\r\n  let formIsValid = false;\r\n  if (enteredEmailIsValidLogin && enteredPasswordIsValidLogin) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLogin) {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/staff/login\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailLogin,\r\n            password: enteredPasswordLogin,\r\n          }),\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        setIsLoading(false);\r\n\r\n        if (responseData.status === \"201\") {\r\n          authCtx.login(responseData.token);\r\n          window.sessionStorage.setItem(\"staffId\", responseData.staffId);\r\n          history.replace({\r\n            pathname: \"/staff/home\",\r\n            // doctorId : responseData.doctorDetail._id\r\n          });\r\n          // console.log(responseData.message);\r\n          // console.log(responseData.doctorId);\r\n        } else {\r\n          setIsInValidCredentials(true);\r\n          setEnteredEmailLogin(\"\");\r\n          setEnteredPasswordLogin(\"\");\r\n\r\n          setEnteredEmailLoginTouched(false);\r\n          setEnteredPasswordLoginTouched(false);\r\n          console.log(responseData.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n        <img src={StaffImage} className=\"img-fluid\" alt=\"Phone image\" style={{width:\"600px\"}}/>\r\n      </div>\r\n      {/* <Card.Img src={StaffImage} alt=\"Card image\" height={661} /> */}\r\n      <div className={classes.loginbox}>\r\n      <Card.ImgOverlay>\r\n        <section className={classes.auth}>\r\n          <h3>STAFF LOGIN</h3>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            {isLogin && (\r\n              <div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"abc@gmail.com\"\r\n                    required\r\n                    onChange={emailInputChangeHandlerLogin}\r\n                    onBlur={emailInputBlurHandlerLogin}\r\n                    value={enteredEmailLogin}\r\n                  />\r\n                  {emailInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Email must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    onChange={passwordInputChangeHandlerLogin}\r\n                    onBlur={passwordInputBlurHandlerLogin}\r\n                    value={enteredPasswordLogin}\r\n                  />\r\n                  {passwordInputIsInvalidLogin && (\r\n                    <div className=\"p-3\">\r\n                      <h6>Password must not be empty</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.actions}>\r\n              {!isLoading && <button disabled={!formIsValid}>Login</button>}\r\n              {isLoading && (\r\n                <RingLoader color=\"white\" height={80} width={80}></RingLoader>\r\n              )}\r\n              {isLogin && isInValidCredentials && (\r\n                <div className=\"p-3\">\r\n                  <h6>Invalid credentials, could not log you in.</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Card.ImgOverlay>\r\n      </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StaffForm;","D:\\Project Work\\Frontend\\src\\pages\\Patient\\SearchDoctor.js",["342"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardActionArea } from '@mui/material';\r\nimport DoctorImage from '../../components/images/enric.jpeg';\r\nimport './SearchDoctor.css';\r\nconst SearchDoctor = () => {\r\n    const [search, setSearch] = useState();\r\n    const [record, setRecord] = useState([]);\r\n\r\n    const loadDoctorDetail = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/doctor/detail\");\r\n            const responseData = await response.json();\r\n\r\n            setRecord(responseData.doctor);\r\n        } catch (err) {\r\n            console.log(\"error\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        search ? searchRecords() : loadDoctorDetail();\r\n    }, [search]);\r\n\r\n    const searchRecords = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:5000/doctor/searchRecord/${search}`\r\n            );\r\n            const responseData = await response.json();\r\n            //   console.log(responseData.doctor);\r\n            setRecord(responseData.doctor);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <PatientMainNavigation></PatientMainNavigation>\r\n            <div className=\"search-doctor\" style={{minHeight:\"91vh\"}}>\r\n                <div className=\"container\">\r\n                    <h3 className=\"mb-3 text-center mt-4 mx-5\" style={{ borderBottom: \"4px solid rgb(13, 230, 230)\", display: \"inline-block\",color:\"white\"}}>Search Doctors</h3>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"col-sm-5\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"form1\"\r\n                                    onChange={(e) => setSearch(e.target.value)}\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Search Doctors\"\r\n                                    style={{ backgroundColor: \"#ffffff\",color:\"black\"}}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-sm-5 mt-3\">\r\n                                <NavLink to=\"/map\" exact>\r\n                                    <button type=\"button\" className=\"btn btn-info btn-lg mx-2\">View On Map</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <p>\r\n                            <div className=\"input-group mb-4 mt-5\">\r\n                                {record.map((doctor) => (\r\n                                    <ul key={doctor.firstName}>\r\n                                        <Card sx={{ width: 398 }} className=\"bg-dark\">\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    height=\"140\"\r\n                                                    src={DoctorImage}\r\n                                                    alt=\"green iguana\"\r\n                                                />\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"div\" style={{ borderBottom: \"4px solid rgb(13, 230, 230)\", display: \"inline-block\" ,color:\"white\"}}>\r\n                                                        {doctor.firstName} {doctor.lastName}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                        <ul className=\"list-group list-group-flush\">\r\n                                                            <li className=\"list-group-item bg-dark\" style={{color:\"white\"}}><label style={{color:\"white\"}}>Specialization : </label>{doctor.specialization}</li>\r\n                                                            <li className=\"list-group-item bg-dark\" style={{color:\"white\"}}><label style={{color:\"white\"}}>Email :  </label>{doctor.email}</li>\r\n                                                            <li className=\"list-group-item bg-dark\" style={{color:\"white\"}}><label style={{color:\"white\"}}>Contact Number :  </label>{doctor.mobileNumber}</li>\r\n                                                            <li className=\"list-group-item bg-dark\" style={{color:\"white\"}}><label style={{color:\"white\"}}>Address :  </label>{doctor.address}</li>\r\n                                                        </ul>\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </ul>\r\n                                ))}\r\n                            </div>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SearchDoctor;","D:\\Project Work\\Frontend\\src\\pages\\Patient\\Map.js",[],"D:\\Project Work\\Frontend\\src\\pages\\Patient\\UpdateProfile.js",["343","344","345","346"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport PatientImage from \"../../components/images/PatientVector.jpg\";\r\nimport PatientMainNavigation from \"./PatientMainNavigation\";\r\nimport { Form, Group, Card } from \"react-bootstrap\";\r\nimport classes from \"../../components/Auth/PatientForm.module.css\";\r\nconst UpdateProfile = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const patientId = window.sessionStorage.getItem(\"patientId\");\r\n  const [patient, setPatient] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isExsistingUser, setIsExsistingUser] = useState(false);\r\n\r\n  const [enteredFirstName, setEnteredFirstName] = useState(patient.firstName);\r\n\r\n  const [enteredLastName, setEnteredLastName] = useState(patient.lastName);\r\n\r\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\r\n\r\n  const [enteredMobileNumber, setEnteredMobileNumber] = useState(patient.mobileNumber);\r\n\r\n  const firstNameInputChangeHandler = (event) => {\r\n    setEnteredFirstName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const lastNameInputChangeHandler = (event) => {\r\n    setEnteredLastName(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const emailInputChangeHandler = (event) => {\r\n    setEnteredEmail(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  const mobileNumberInputChangeHandler = (event) => {\r\n    setEnteredMobileNumber(event.target.value);\r\n    setIsExsistingUser(false);\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/detail/${patientId}`\r\n        );\r\n\r\n        const responseData = await response.json();\r\n        const patientDetail = {\r\n          firstName: responseData.patient.firstName,\r\n          lastName: responseData.patient.lastName,\r\n          email: responseData.patient.email,\r\n          mobileNumber: responseData.patient.mobileNumber,\r\n        };\r\n        setPatient(patientDetail);\r\n      } catch (err) {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    sendRequest();\r\n  }, [patientId]);\r\n\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        `http://localhost:5000/update/${patientId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            firstName: enteredFirstName,\r\n            lastName: enteredLastName,\r\n            mobileNumber: enteredMobileNumber,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n      setIsLoading(false);\r\n        // console.lo\r\n      if (responseData.status === \"201\") {\r\n        // authCtx.login(responseData.token);\r\n        //window.sessionStorage.setItem(\"userId\", responseData.userId);\r\n        // window.sessionStorage.setItem(\"patientId\", responseData.patientId);\r\n        history.replace(\"/patient/detail\");\r\n        console.log(responseData.message);\r\n      } else {\r\n        setIsExsistingUser(true);\r\n        setEnteredEmail(\"\");\r\n        setEnteredFirstName(\"\");\r\n        setEnteredLastName(\"\");\r\n        setEnteredMobileNumber(\"\");\r\n\r\n        console.log(responseData.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PatientMainNavigation></PatientMainNavigation>\r\n\r\n      <div className={classes.container}>\r\n        <div className={classes.imagebox}>\r\n          <img\r\n            src={PatientImage}\r\n            className=\"img-fluid\"\r\n            alt=\"Phoneimage\"\r\n            style={{ width: \"600px\" }}\r\n          />\r\n        </div>\r\n        <div className={classes.loginbox}>\r\n          <Card.ImgOverlay>\r\n            <section className={classes.auth}>\r\n              <h3>UPDATE INFORMATION</h3>\r\n\r\n              <form onSubmit={formSubmitHandler}>\r\n                <div>\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"text\">First Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      required\r\n                      onChange={firstNameInputChangeHandler}\r\n                      defaultValue={patient.firstName}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"text\">Last Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"lname\"\r\n                      placeholder=\"Last Name\"\r\n                      required\r\n                      onChange={lastNameInputChangeHandler}\r\n                      defaultValue={patient.lastName}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"abc@gmail.com\"\r\n                      id=\"email\"\r\n                      required\r\n                      onChange={emailInputChangeHandler}\r\n                      defaultValue={patient.email}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.control}>\r\n                    <label htmlFor=\"text\">Mobile Number</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"number\"\r\n                      placeholder=\"10 digit mobile number\"\r\n                      pattern=\"[0-9]{10}\"\r\n                      required\r\n                      onChange={mobileNumberInputChangeHandler}\r\n                      defaultValue={patient.mobileNumber}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className={classes.actions}>\r\n                  {!isLoading && <button>Update Profile</button>}\r\n                  {isLoading && (\r\n                    <RingLoader\r\n                      color=\"white\"\r\n                      height={80}\r\n                      width={80}\r\n                    ></RingLoader>\r\n                  )}\r\n\r\n                  {isExsistingUser && (\r\n                    <div className=\"p-3\">\r\n                      <h6>User exists already, please login instead.</h6>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            </section>\r\n          </Card.ImgOverlay>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;","D:\\Project Work\\Frontend\\src\\pages\\Doctor\\UpdateDoctorProfile.js",["347"],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\UpdateStaffProfile.js",["348","349","350","351"],"D:\\Project Work\\Frontend\\src\\pages\\Staff\\StaffDetail.js",[],{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","severity":1,"message":"357","line":6,"column":10,"nodeType":"358","messageId":"359","endLine":6,"endColumn":14},{"ruleId":"356","severity":1,"message":"360","line":6,"column":16,"nodeType":"358","messageId":"359","endLine":6,"endColumn":21},{"ruleId":"356","severity":1,"message":"361","line":12,"column":19,"nodeType":"358","messageId":"359","endLine":12,"endColumn":29},{"ruleId":"362","severity":1,"message":"363","line":100,"column":11,"nodeType":"364","endLine":100,"endColumn":102},{"ruleId":"356","severity":1,"message":"357","line":6,"column":10,"nodeType":"358","messageId":"359","endLine":6,"endColumn":14},{"ruleId":"356","severity":1,"message":"360","line":6,"column":16,"nodeType":"358","messageId":"359","endLine":6,"endColumn":21},{"ruleId":"356","severity":1,"message":"361","line":12,"column":19,"nodeType":"358","messageId":"359","endLine":12,"endColumn":29},{"ruleId":"362","severity":1,"message":"363","line":104,"column":9,"nodeType":"364","endLine":105,"endColumn":91},{"ruleId":"365","severity":1,"message":"366","line":105,"column":71,"nodeType":"367","messageId":"368","endLine":105,"endColumn":72},{"ruleId":"356","severity":1,"message":"369","line":8,"column":9,"nodeType":"358","messageId":"359","endLine":8,"endColumn":16},{"ruleId":"356","severity":1,"message":"357","line":8,"column":10,"nodeType":"358","messageId":"359","endLine":8,"endColumn":14},{"ruleId":"356","severity":1,"message":"360","line":8,"column":16,"nodeType":"358","messageId":"359","endLine":8,"endColumn":21},{"ruleId":"362","severity":1,"message":"363","line":268,"column":9,"nodeType":"364","endLine":268,"endColumn":98},{"ruleId":"356","severity":1,"message":"369","line":8,"column":9,"nodeType":"358","messageId":"359","endLine":8,"endColumn":16},{"ruleId":"356","severity":1,"message":"370","line":10,"column":3,"nodeType":"358","messageId":"359","endLine":10,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":11,"column":3,"nodeType":"358","messageId":"359","endLine":11,"endColumn":7},{"ruleId":"356","severity":1,"message":"371","line":12,"column":3,"nodeType":"358","messageId":"359","endLine":12,"endColumn":14},{"ruleId":"356","severity":1,"message":"372","line":6,"column":9,"nodeType":"358","messageId":"359","endLine":6,"endColumn":24},{"ruleId":"356","severity":1,"message":"370","line":10,"column":3,"nodeType":"358","messageId":"359","endLine":10,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":11,"column":3,"nodeType":"358","messageId":"359","endLine":11,"endColumn":7},{"ruleId":"356","severity":1,"message":"371","line":12,"column":3,"nodeType":"358","messageId":"359","endLine":12,"endColumn":14},{"ruleId":"356","severity":1,"message":"373","line":13,"column":3,"nodeType":"358","messageId":"359","endLine":13,"endColumn":9},{"ruleId":"356","severity":1,"message":"374","line":20,"column":9,"nodeType":"358","messageId":"359","endLine":20,"endColumn":22},{"ruleId":"356","severity":1,"message":"375","line":24,"column":9,"nodeType":"358","messageId":"359","endLine":24,"endColumn":19},{"ruleId":"376","severity":1,"message":"377","line":23,"column":13,"nodeType":"364","endLine":23,"endColumn":140},{"ruleId":"378","severity":1,"message":"379","line":43,"column":46,"nodeType":"364","endLine":43,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":43,"column":96,"nodeType":"364","endLine":43,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":43,"column":145,"nodeType":"364","endLine":43,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":54,"column":46,"nodeType":"364","endLine":54,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":54,"column":96,"nodeType":"364","endLine":54,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":54,"column":145,"nodeType":"364","endLine":54,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":65,"column":46,"nodeType":"364","endLine":65,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":65,"column":96,"nodeType":"364","endLine":65,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":65,"column":145,"nodeType":"364","endLine":65,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":76,"column":46,"nodeType":"364","endLine":76,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":76,"column":96,"nodeType":"364","endLine":76,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":76,"column":145,"nodeType":"364","endLine":76,"endColumn":157},{"ruleId":"376","severity":1,"message":"377","line":23,"column":13,"nodeType":"364","endLine":23,"endColumn":140},{"ruleId":"378","severity":1,"message":"379","line":43,"column":46,"nodeType":"364","endLine":43,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":43,"column":96,"nodeType":"364","endLine":43,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":43,"column":145,"nodeType":"364","endLine":43,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":54,"column":46,"nodeType":"364","endLine":54,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":54,"column":96,"nodeType":"364","endLine":54,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":54,"column":145,"nodeType":"364","endLine":54,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":65,"column":46,"nodeType":"364","endLine":65,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":65,"column":96,"nodeType":"364","endLine":65,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":65,"column":145,"nodeType":"364","endLine":65,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":76,"column":46,"nodeType":"364","endLine":76,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":76,"column":96,"nodeType":"364","endLine":76,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":76,"column":145,"nodeType":"364","endLine":76,"endColumn":157},{"ruleId":"356","severity":1,"message":"370","line":11,"column":3,"nodeType":"358","messageId":"359","endLine":11,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":12,"column":3,"nodeType":"358","messageId":"359","endLine":12,"endColumn":7},{"ruleId":"356","severity":1,"message":"371","line":13,"column":3,"nodeType":"358","messageId":"359","endLine":13,"endColumn":14},{"ruleId":"356","severity":1,"message":"380","line":20,"column":7,"nodeType":"358","messageId":"359","endLine":20,"endColumn":13},{"ruleId":"356","severity":1,"message":"370","line":11,"column":3,"nodeType":"358","messageId":"359","endLine":11,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":12,"column":3,"nodeType":"358","messageId":"359","endLine":12,"endColumn":7},{"ruleId":"356","severity":1,"message":"371","line":13,"column":3,"nodeType":"358","messageId":"359","endLine":13,"endColumn":14},{"ruleId":"356","severity":1,"message":"380","line":20,"column":7,"nodeType":"358","messageId":"359","endLine":20,"endColumn":13},{"ruleId":"356","severity":1,"message":"381","line":5,"column":9,"nodeType":"358","messageId":"359","endLine":5,"endColumn":20},{"ruleId":"356","severity":1,"message":"382","line":5,"column":21,"nodeType":"358","messageId":"359","endLine":5,"endColumn":25},{"ruleId":"356","severity":1,"message":"373","line":5,"column":26,"nodeType":"358","messageId":"359","endLine":5,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":25,"column":13,"nodeType":"364","endLine":25,"endColumn":140},{"ruleId":"378","severity":1,"message":"379","line":45,"column":46,"nodeType":"364","endLine":45,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":45,"column":96,"nodeType":"364","endLine":45,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":45,"column":145,"nodeType":"364","endLine":45,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":56,"column":46,"nodeType":"364","endLine":56,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":56,"column":96,"nodeType":"364","endLine":56,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":56,"column":145,"nodeType":"364","endLine":56,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":67,"column":46,"nodeType":"364","endLine":67,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":67,"column":96,"nodeType":"364","endLine":67,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":67,"column":145,"nodeType":"364","endLine":67,"endColumn":157},{"ruleId":"378","severity":1,"message":"379","line":78,"column":46,"nodeType":"364","endLine":78,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":78,"column":96,"nodeType":"364","endLine":78,"endColumn":108},{"ruleId":"378","severity":1,"message":"379","line":78,"column":145,"nodeType":"364","endLine":78,"endColumn":157},{"ruleId":"356","severity":1,"message":"383","line":4,"column":10,"nodeType":"358","messageId":"359","endLine":4,"endColumn":21},{"ruleId":"356","severity":1,"message":"384","line":5,"column":10,"nodeType":"358","messageId":"359","endLine":5,"endColumn":15},{"ruleId":"385","severity":1,"message":"386","line":35,"column":6,"nodeType":"387","endLine":35,"endColumn":8,"suggestions":"388"},{"ruleId":"356","severity":1,"message":"389","line":1,"column":27,"nodeType":"358","messageId":"359","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"390","line":1,"column":38,"nodeType":"358","messageId":"359","endLine":1,"endColumn":44},{"ruleId":"356","severity":1,"message":"391","line":2,"column":8,"nodeType":"358","messageId":"359","endLine":2,"endColumn":27},{"ruleId":"356","severity":1,"message":"382","line":10,"column":42,"nodeType":"358","messageId":"359","endLine":10,"endColumn":46},{"ruleId":"356","severity":1,"message":"392","line":23,"column":10,"nodeType":"358","messageId":"359","endLine":23,"endColumn":14},{"ruleId":"356","severity":1,"message":"393","line":23,"column":16,"nodeType":"358","messageId":"359","endLine":23,"endColumn":23},{"ruleId":"356","severity":1,"message":"394","line":1,"column":17,"nodeType":"358","messageId":"359","endLine":1,"endColumn":25},{"ruleId":"356","severity":1,"message":"389","line":1,"column":27,"nodeType":"358","messageId":"359","endLine":1,"endColumn":36},{"ruleId":"356","severity":1,"message":"390","line":1,"column":38,"nodeType":"358","messageId":"359","endLine":1,"endColumn":44},{"ruleId":"356","severity":1,"message":"357","line":2,"column":10,"nodeType":"358","messageId":"359","endLine":2,"endColumn":14},{"ruleId":"356","severity":1,"message":"395","line":5,"column":10,"nodeType":"358","messageId":"359","endLine":5,"endColumn":16},{"ruleId":"356","severity":1,"message":"396","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":16},{"ruleId":"356","severity":1,"message":"397","line":11,"column":10,"nodeType":"358","messageId":"359","endLine":11,"endColumn":29},{"ruleId":"356","severity":1,"message":"373","line":14,"column":10,"nodeType":"358","messageId":"359","endLine":14,"endColumn":16},{"ruleId":"356","severity":1,"message":"369","line":8,"column":9,"nodeType":"358","messageId":"359","endLine":8,"endColumn":16},{"ruleId":"356","severity":1,"message":"370","line":10,"column":3,"nodeType":"358","messageId":"359","endLine":10,"endColumn":14},{"ruleId":"356","severity":1,"message":"357","line":11,"column":3,"nodeType":"358","messageId":"359","endLine":11,"endColumn":7},{"ruleId":"356","severity":1,"message":"371","line":12,"column":3,"nodeType":"358","messageId":"359","endLine":12,"endColumn":14},{"ruleId":"356","severity":1,"message":"361","line":13,"column":19,"nodeType":"358","messageId":"359","endLine":13,"endColumn":29},{"ruleId":"362","severity":1,"message":"363","line":104,"column":9,"nodeType":"364","endLine":104,"endColumn":96},{"ruleId":"385","severity":1,"message":"398","line":28,"column":8,"nodeType":"387","endLine":28,"endColumn":16,"suggestions":"399"},{"ruleId":"356","severity":1,"message":"357","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":14},{"ruleId":"356","severity":1,"message":"360","line":7,"column":16,"nodeType":"358","messageId":"359","endLine":7,"endColumn":21},{"ruleId":"356","severity":1,"message":"369","line":10,"column":9,"nodeType":"358","messageId":"359","endLine":10,"endColumn":16},{"ruleId":"356","severity":1,"message":"400","line":24,"column":10,"nodeType":"358","messageId":"359","endLine":24,"endColumn":22},{"ruleId":"356","severity":1,"message":"369","line":12,"column":9,"nodeType":"358","messageId":"359","endLine":12,"endColumn":16},{"ruleId":"356","severity":1,"message":"401","line":5,"column":8,"nodeType":"358","messageId":"359","endLine":5,"endColumn":20},{"ruleId":"356","severity":1,"message":"357","line":7,"column":10,"nodeType":"358","messageId":"359","endLine":7,"endColumn":14},{"ruleId":"356","severity":1,"message":"360","line":7,"column":16,"nodeType":"358","messageId":"359","endLine":7,"endColumn":21},{"ruleId":"356","severity":1,"message":"369","line":12,"column":9,"nodeType":"358","messageId":"359","endLine":12,"endColumn":16},"no-native-reassign",["402"],"no-negated-in-lhs",["403"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Group' is defined but never used.","'setIsLogin' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'authCtx' is assigned a value but never used.","'NavDropdown' is defined but never used.","'FormControl' is defined but never used.","'GiHospitalCross' is defined but never used.","'Button' is defined but never used.","'logoutHandler' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'style2' is assigned a value but never used.","'Placeholder' is defined but never used.","'Card' is defined but never used.","'useLocation' is defined but never used.","'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'patientId'. Either include it or remove the dependency array.","ArrayExpression",["404"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'StaffMainNavigation' is defined but never used.","'file' is assigned a value but never used.","'seeFile' is assigned a value but never used.","'useState' is defined but never used.","'Worker' is defined but never used.","'Viewer' is defined but never used.","'defaultLayoutPlugin' is defined but never used.","React Hook useEffect has a missing dependency: 'searchRecords'. Either include it or remove the dependency array.",["405"],"'enteredEmail' is assigned a value but never used.","'PatientImage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},"Update the dependencies array to be: [patientId]",{"range":"410","text":"411"},"Update the dependencies array to be: [search, searchRecords]",{"range":"412","text":"413"},[1126,1128],"[patientId]",[1080,1088],"[search, searchRecords]"]